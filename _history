{"entries":[{"timestamp":1716548119641,"editorVersion":"2.0.2","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"l\"><"],[-1,"variables></variables><"],[0,"bloc"]],"start1":52,"start2":52,"length1":31,"length2":8},{"diffs":[[0," y=\"0\"><"],[1,"statement name=\"HANDLER\"><block type=\"mixer_play_sound\"><field name=\"sound\">music.baDing</field></block></statement><"],[0,"/block><"]],"start1":87,"start2":87,"length1":16,"length2":133}]},{"type":"removed","filename":"main.py","value":"music.ba_ding.play()"},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[1,"music.baDing.play()"],[0,"\n"]],"start1":0,"start2":0,"length1":1,"length2":20}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"\": \""],[-1,"Untitled"],[1,"with music"],[0,"\",\n "]],"start1":11,"start2":11,"length1":16,"length2":18},{"diffs":[[0,"son\""],[-1,"\n    ]"],[1,",\n        \"main.py\",\n        \"tilemap.g.jres\",\n        \"tilemap.g.ts\"\n    ],\n    \"targetVersions\": {\n        \"target\": \"1.12.2\",\n        \"pxt\": \"8.5.2\"\n    },\n    \"preferredEditor\": \"pyprj\""],[0,"\n}\n"]],"start1":197,"start2":197,"length1":13,"length2":196}]},{"type":"removed","filename":"tilemap.g.jres","value":"{\n    \"transparency16\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"tilemapTile\": true\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myTiles\"\n    }\n}"},{"type":"removed","filename":"tilemap.g.ts","value":"// Auto-generated code. Do not edit.\nnamespace myTiles {\n    //% fixedInstance jres blockIdentity=images._tile\n    export const transparency16 = image.ofBuffer(hex``);\n\n    helpers._registerFactory(\"tile\", function(name: string) {\n        switch(helpers.stringTrim(name)) {\n            case \"transparency16\":return transparency16;\n        }\n        return null;\n    })\n\n}\n// Auto-generated code. Do not edit.\n"}]},{"timestamp":1716548137682,"editorVersion":"2.0.2","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"son\""],[-1,",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\""],[1,"\n    ]"],[0,"\n}\n"]],"start1":195,"start2":195,"length1":64,"length2":13}]},{"type":"added","filename":"main.py","value":"\n"}]},{"timestamp":1718042395638,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"son\""],[-1,"\n    ]"],[1,",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\""],[0,"\n}\n"]],"start1":195,"start2":195,"length1":13,"length2":64}]},{"type":"removed","filename":"main.py","value":"\n"}]},{"timestamp":1718042432006,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"son\""],[-1,",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\""],[1,"\n    ]"],[0,"\n}\n"]],"start1":195,"start2":195,"length1":64,"length2":13}]},{"type":"added","filename":"main.py","value":"\n"}]},{"timestamp":1737120509635,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," \"*\""],[-1,",\n        \"arcade-text\": \"github:microsoft/arcade-text#v1.3.0\""],[0,"\n   "]],"start1":88,"start2":88,"length1":70,"length2":8},{"diffs":[[0,".py\""],[-1,",\n        \"images.g.jres\",\n        \"images.g.ts\",\n        \"tilemap.g.jres\",\n        \"tilemap.g.ts\"\n    ],\n    \"targetVersions\": {\n        \"target\": \"2.0.3\",\n        \"pxt\": \"10.0.23\"\n    },\n    \"preferredEditor\": \"pyprj\",\n    \"palette\": [\n        \"#000000\",\n        \"#FFFFFF\",\n        \"#B22A2A\",\n        \"#FF93C4\",\n        \"#FF8135\",\n        \"#FFF609\",\n        \"#249CA3\",\n        \"#509933\",\n        \"#003FAD\",\n        \"#BADCFD\",\n        \"#8E2EC4\",\n        \"#A4839F\",\n        \"#5C406c\",\n        \"#E5CDC4\",\n        \"#91463d\",\n        \"#000000\"\n    ]"],[1,"\n    ],\n    \"preferredEditor\": \"pyprj\""],[0,"\n}\n"]],"start1":214,"start2":214,"length1":553,"length2":45}]},{"type":"added","filename":"images.g.jres","value":"{\n    \"image2\": {\n        \"data\": \"hwQUABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////AAAA8P///wDw////AAAA/////w/w////AADw///////w////AAD/////////////AAD/////////////AAD/////////////AAD/////////////AAD/////////////AAD/////////////AAD/////////////AADw///////w////AAAA/////w/w////AAAA8P///wAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"bot\"\n    },\n    \"image4\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQHxEREZ8AAJAREf8RkQAAkBHx/xGRAACQEf//H5EAAJAR8f8RkQAAkBER/xGRAACQHxEREZ8AAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"One\"\n    },\n    \"image5\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQEhEREZIAAJARIRERkQAAkBESESKRAACQERIhIZEAAJARIRIhkQAAkBERERGRAACQEhEREZIAAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"two\"\n    },\n    \"image7\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQHxEREZ8AAJARERERkQAAkBEfER+RAACQ8RER8ZEAAJDxER/xkQAAkBH/8R+RAACQHxEREZ8AAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"three\"\n    },\n    \"image6\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQEhEREZIAAJARERIRkQAAkBEhIRGRAACQERIhEZEAAJARIiIikQAAkBERERGRAACQEhEREZIAAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"four\"\n    },\n    \"image8\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQHxEREZ8AAJAR/x8fkQAAkBEfHx+RAACQER8fH5EAAJARH/EfkQAAkBERERGRAACQHxEREZ8AAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"five\"\n    },\n    \"image9\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQEhEREZIAAJARIiISkQAAkBESEhKRAACQERISEpEAAJAREiISkQAAkBERERGRAACQEhEREZIAAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"six\"\n    },\n    \"image11\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQHxEREZ8AAJARER8RkQAAkBH//x+RAACQER8fEZEAAJARHxERkQAAkBERERGRAACQHxEREZ8AAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"seven\"\n    },\n    \"image10\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQEhEREZIAAJARIiISkQAAkBESEhKRAACQERISEpEAAJAREhISkQAAkBEiIhKRAACQEhEREZIAAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"eight\"\n    },\n    \"image13\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQEhEREZIAAJARIiIRkQAAkBERERGRAACQESIiEZEAAJAREiERkQAAkBEiIhGRAACQEhEREZIAAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"ten\"\n    },\n    \"image3\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8O6e6e4PAADg8f///w4AAOAfHxEfDgAAkP8RH/EJAACQHx8RHwkAAODx////DgAA4P////8OAADw7p7p7g8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"deck\"\n    },\n    \"image12\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQHxEREZ8AAJAR/x8RkQAAkBEfHxGRAACQER8fEZEAAJAR//8fkQAAkBERERGRAACQHxEREZ8AAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"nine\"\n    },\n    \"image1\": {\n        \"data\": \"hwQQABAAAAAAAADgd+fu7gAAAOB35+4AAAAA4Hd3DgAAAADgd3cOAAAAAOB3dw4AAAAA4Hd3DgAAAADgd3cOAAAAAOB3dw4AAAAA4Hd3DgAAAADgd3cOAAAAAOB3dw4AAAAA4Hd3DgAAAADgd3cOAAAA8O93dw4AAADw73fn7gAAAPDvd+fu7g==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"Table\"\n    },\n    \"image14\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAAAAADwAA8AAADw////DwAAAPD/////DwAAAADw//8PAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"gun\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myImages\"\n    }\n}"},{"type":"added","filename":"images.g.ts","value":"// Auto-generated code. Do not edit.\nnamespace myImages {\n\n    helpers._registerFactory(\"image\", function(name: string) {\n        switch(helpers.stringTrim(name)) {\n            case \"image2\":\n            case \"bot\":return img`\n.......fffffff......\n......fffffffff.....\n.....fffffffffff....\n....fffffffffffff...\n....fffffffffffff...\n....fffffffffffff...\n....fffffffffffff...\n....fffffffffffff...\n....fffffffffffff...\n....fffffffffffff...\n.....fffffffffff....\n......fffffffff.....\n.......fffffff......\n....ffffffffffff....\n...ffffffffffffff...\n...ffffffffffffff...\n...ffffffffffffff...\n...ffffffffffffff...\n...ffffffffffffff...\n...ffffffffffffff...\n`;\n            case \"image4\":\n            case \"One\":return img`\n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . 9 9 9 9 9 9 9 . . . . . \n. . . 9 f 1 1 1 1 1 f 9 . . . . \n. . . 9 1 1 1 1 1 1 1 9 . . . . \n. . . 9 1 1 1 f 1 1 1 9 . . . . \n. . . 9 1 1 f f f 1 1 9 . . . . \n. . . 9 1 f f f f f 1 9 . . . . \n. . . 9 1 f f f f f 1 9 . . . . \n. . . 9 1 1 1 f 1 1 1 9 . . . . \n. . . 9 1 1 1 1 1 1 1 9 . . . . \n. . . 9 f 1 1 1 1 1 f 9 . . . . \n. . . . 9 9 9 9 9 9 9 . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n`;\n            case \"image5\":\n            case \"two\":return img`\n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . 9 9 9 9 9 9 9 . . . . . \n. . . 9 2 1 1 1 1 1 2 9 . . . . \n. . . 9 1 1 1 1 1 1 1 9 . . . . \n. . . 9 1 1 2 2 1 1 1 9 . . . . \n. . . 9 1 2 1 1 2 1 1 9 . . . . \n. . . 9 1 1 1 1 2 1 1 9 . . . . \n. . . 9 1 1 1 2 1 1 1 9 . . . . \n. . . 9 1 1 2 1 1 1 1 9 . . . . \n. . . 9 1 1 2 2 2 1 1 9 . . . . \n. . . 9 2 1 1 1 1 1 2 9 . . . . \n. . . . 9 9 9 9 9 9 9 . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n`;\n            case \"image7\":\n            case \"three\":return img`\n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . 9 9 9 9 9 9 9 . . . . . \n. . . 9 f 1 1 1 1 1 f 9 . . . . \n. . . 9 1 1 1 f f 1 1 9 . . . . \n. . . 9 1 1 f 1 1 f 1 9 . . . . \n. . . 9 1 1 1 1 1 f 1 9 . . . . \n. . . 9 1 1 1 1 f 1 1 9 . . . . \n. . . 9 1 1 1 1 1 f 1 9 . . . . \n. . . 9 1 1 f 1 1 f 1 9 . . . . \n. . . 9 1 1 1 f f 1 1 9 . . . . \n. . . 9 f 1 1 1 1 1 f 9 . . . . \n. . . . 9 9 9 9 9 9 9 . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n`;\n            case \"image6\":\n            case \"four\":return img`\n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . 9 9 9 9 9 9 9 . . . . . \n. . . 9 2 1 1 1 1 1 2 9 . . . . \n. . . 9 1 1 1 1 1 1 1 9 . . . . \n. . . 9 1 1 1 2 2 1 1 9 . . . . \n. . . 9 1 1 2 1 2 1 1 9 . . . . \n. . . 9 1 2 1 1 2 1 1 9 . . . . \n. . . 9 1 1 2 2 2 1 1 9 . . . . \n. . . 9 1 1 1 1 2 1 1 9 . . . . \n. . . 9 1 1 1 1 2 1 1 9 . . . . \n. . . 9 2 1 1 1 1 1 2 9 . . . . \n. . . . 9 9 9 9 9 9 9 . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n`;\n            case \"image8\":\n            case \"five\":return img`\n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . 9 9 9 9 9 9 9 . . . . . \n. . . 9 f 1 1 1 1 1 f 9 . . . . \n. . . 9 1 1 1 1 1 1 1 9 . . . . \n. . . 9 1 f f f f 1 1 9 . . . . \n. . . 9 1 f 1 1 1 1 1 9 . . . . \n. . . 9 1 f f f 1 1 1 9 . . . . \n. . . 9 1 1 1 1 f 1 1 9 . . . . \n. . . 9 1 f f f f 1 1 9 . . . . \n. . . 9 1 1 1 1 1 1 1 9 . . . . \n. . . 9 f 1 1 1 1 1 f 9 . . . . \n. . . . 9 9 9 9 9 9 9 . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n`;\n            case \"image9\":\n            case \"six\":return img`\n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . 9 9 9 9 9 9 9 . . . . . \n. . . 9 2 1 1 1 1 1 2 9 . . . . \n. . . 9 1 1 1 1 1 1 1 9 . . . . \n. . . 9 1 2 2 2 2 1 1 9 . . . . \n. . . 9 1 2 1 1 1 1 1 9 . . . . \n. . . 9 1 2 2 2 2 1 1 9 . . . . \n. . . 9 1 2 1 1 2 1 1 9 . . . . \n. . . 9 1 2 2 2 2 1 1 9 . . . . \n. . . 9 1 1 1 1 1 1 1 9 . . . . \n. . . 9 2 1 1 1 1 1 2 9 . . . . \n. . . . 9 9 9 9 9 9 9 . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n`;\n            case \"image11\":\n            case \"seven\":return img`\n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . 9 9 9 9 9 9 9 . . . . . \n. . . 9 f 1 1 1 1 1 f 9 . . . . \n. . . 9 1 1 1 1 1 1 1 9 . . . . \n. . . 9 1 1 f f f 1 1 9 . . . . \n. . . 9 1 1 f 1 1 1 1 9 . . . . \n. . . 9 1 f f f 1 1 1 9 . . . . \n. . . 9 1 1 f 1 1 1 1 9 . . . . \n. . . 9 1 1 f 1 1 1 1 9 . . . . \n. . . 9 1 1 1 1 1 1 1 9 . . . . \n. . . 9 f 1 1 1 1 1 f 9 . . . . \n. . . . 9 9 9 9 9 9 9 . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n`;\n            case \"image10\":\n            case \"eight\":return img`\n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . 9 9 9 9 9 9 9 . . . . . \n. . . 9 2 1 1 1 1 1 2 9 . . . . \n. . . 9 1 1 1 1 1 1 1 9 . . . . \n. . . 9 1 2 2 2 2 2 1 9 . . . . \n. . . 9 1 2 1 1 1 2 1 9 . . . . \n. . . 9 1 2 2 2 2 2 1 9 . . . . \n. . . 9 1 2 1 1 1 2 1 9 . . . . \n. . . 9 1 2 2 2 2 2 1 9 . . . . \n. . . 9 1 1 1 1 1 1 1 9 . . . . \n. . . 9 2 1 1 1 1 1 2 9 . . . . \n. . . . 9 9 9 9 9 9 9 . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n`;\n            case \"image13\":\n            case \"ten\":return img`\n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . 9 9 9 9 9 9 9 . . . . . \n. . . 9 2 1 1 1 1 1 2 9 . . . . \n. . . 9 1 1 1 1 1 1 1 9 . . . . \n. . . 9 1 2 1 2 2 2 1 9 . . . . \n. . . 9 1 2 1 2 1 2 1 9 . . . . \n. . . 9 1 2 1 2 1 2 1 9 . . . . \n. . . 9 1 2 1 2 2 2 1 9 . . . . \n. . . 9 1 1 1 1 1 1 1 9 . . . . \n. . . 9 1 1 1 1 1 1 1 9 . . . . \n. . . 9 2 1 1 1 1 1 2 9 . . . . \n. . . . 9 9 9 9 9 9 9 . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n`;\n            case \"image3\":\n            case \"deck\":return img`\n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . f e e 9 9 e e f . . . . . \n. . . e 1 f f f 1 f e . . . . . \n. . . e f 1 f 1 f f e . . . . . \n. . . e f f 1 f f f e . . . . . \n. . . 9 f 1 1 1 f f 9 . . . . . \n. . . 9 f 1 f 1 f f 9 . . . . . \n. . . e f 1 1 1 f f e . . . . . \n. . . e f f 1 f f f e . . . . . \n. . . e f 1 f 1 f f e . . . . . \n. . . f e e 9 9 e e f . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n`;\n            case \"image12\":\n            case \"nine\":return img`\n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . 9 9 9 9 9 9 9 . . . . . \n. . . 9 f 1 1 1 1 1 f 9 . . . . \n. . . 9 1 1 1 1 1 1 1 9 . . . . \n. . . 9 1 f f f f 1 1 9 . . . . \n. . . 9 1 f 1 1 f 1 1 9 . . . . \n. . . 9 1 f f f f 1 1 9 . . . . \n. . . 9 1 1 1 1 f 1 1 9 . . . . \n. . . 9 1 1 1 1 f 1 1 9 . . . . \n. . . 9 1 1 1 1 1 1 1 9 . . . . \n. . . 9 f 1 1 1 1 1 f 9 . . . . \n. . . . 9 9 9 9 9 9 9 . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n`;\n            case \"image1\":\n            case \"Table\":return img`\n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . f f f \n. . . . . . . . . . . . . f f f \ne e e e e e e e e e e e e e e e \n7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 \n7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 \n7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 \ne e 7 7 7 7 7 7 7 7 7 7 7 7 e e \ne e e e e e e e e e e e e e e e \ne e . . . . . . . . . . . . e e \ne . . . . . . . . . . . . . . e \ne . . . . . . . . . . . . . . e \n`;\n        }\n        return null;\n    })\n\n    helpers._registerFactory(\"animation\", function(name: string) {\n        switch(helpers.stringTrim(name)) {\n\n        }\n        return null;\n    })\n\n    helpers._registerFactory(\"song\", function(name: string) {\n        switch(helpers.stringTrim(name)) {\n\n        }\n        return null;\n    })\n\n}\n// Auto-generated code. Do not edit.\n"},{"type":"added","filename":"tilemap.g.jres","value":"{\n    \"transparency16\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"tilemapTile\": true\n    },\n    \"tile3\": {\n        \"data\": \"hwQQABAAAAAiIiIiIiIiIv//////////IiIiIiIiIiL//////////yIiIiIiIiIi//////////8iIiIiIiIiIv//////////IiIiIiIiIiL//////////yIiIiIiIiIi//////////8iIiIiIiIiIv//////////IiIiIiIiIiL//////////w==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"tilemapTile\": true,\n        \"displayName\": \"myTile1\"\n    },\n    \"level1\": {\n        \"id\": \"level1\",\n        \"mimeType\": \"application/mkcd-tilemap\",\n        \"data\": \"MTAxMDAwMTAwMDAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMA==\",\n        \"tileset\": [\n            \"myTiles.transparency16\",\n            \"myTiles.tile3\"\n        ],\n        \"displayName\": \"level\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myTiles\"\n    }\n}"},{"type":"added","filename":"tilemap.g.ts","value":"// Auto-generated code. Do not edit.\nnamespace myTiles {\n    //% fixedInstance jres blockIdentity=images._tile\n    export const transparency16 = image.ofBuffer(hex``);\n    //% fixedInstance jres blockIdentity=images._tile\n    export const tile3 = image.ofBuffer(hex``);\n\n    helpers._registerFactory(\"tilemap\", function(name: string) {\n        switch(helpers.stringTrim(name)) {\n            case \"level\":\n            case \"level1\":return tiles.createTilemap(hex``, img`\n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n`, [myTiles.transparency16,myTiles.tile3], TileScale.Sixteen);\n        }\n        return null;\n    })\n\n    helpers._registerFactory(\"tile\", function(name: string) {\n        switch(helpers.stringTrim(name)) {\n            case \"transparency16\":return transparency16;\n            case \"myTile1\":\n            case \"tile3\":return tile3;\n        }\n        return null;\n    })\n\n}\n// Auto-generated code. Do not edit.\n"}]},{"timestamp":1737120833892,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"images.g.jres","patch":[{"diffs":[[0," },\n"],[-1,"    \"image3\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8O6e6e4PAADg8f///w4AAOAfHxEfDgAAkP8RH/EJAACQHx8RHwkAAODx////DgAA4P////8OAADw7p7p7g8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"deck\"\n    },\n    \"image1\": {\n        \"data\": \"hwQQABAAAAAAAADgd+fu7gAAAOB35+4AAAAA4Hd3DgAAAADgd3cOAAAAAOB3dw4AAAAA4Hd3DgAAAADgd3cOAAAAAOB3dw4AAAAA4Hd3DgAAAADgd3cOAAAAAOB3dw4AAAAA4Hd3DgAAAADgd3cOAAAA8O93dw4AAADw73fn7gAAAPDvd+fu7g==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"Table\"\n    },\n    \"image14\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAAAAADwAA8AAADw////DwAAAPD/////DwAAAADw//8PAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"gun\"\n    },\n"],[0,"    "]],"start1":441,"start2":441,"length1":897,"length2":8},{"diffs":[[0,"Name\": \""],[-1,"1"],[1,"One"],[0,"\"\n    },"]],"start1":720,"start2":720,"length1":17,"length2":19},{"diffs":[[0,"Name\": \""],[-1,"2"],[1,"two"],[0,"\"\n    },"]],"start1":1015,"start2":1015,"length1":17,"length2":19},{"diffs":[[0,"Name\": \""],[-1,"3"],[1,"three"],[0,"\"\n    },"]],"start1":1310,"start2":1310,"length1":17,"length2":21},{"diffs":[[0,"Name\": \""],[-1,"4"],[1,"four"],[0,"\"\n    },"]],"start1":1607,"start2":1607,"length1":17,"length2":20},{"diffs":[[0,"Name\": \""],[-1,"5"],[1,"five"],[0,"\"\n    },"]],"start1":1903,"start2":1903,"length1":17,"length2":20},{"diffs":[[0,"Name\": \""],[-1,"6"],[1,"six"],[0,"\"\n    },"]],"start1":2199,"start2":2199,"length1":17,"length2":19},{"diffs":[[0,"Name\": \""],[-1,"7"],[1,"seven"],[0,"\"\n    },"]],"start1":2495,"start2":2495,"length1":17,"length2":21},{"diffs":[[0,"Name\": \""],[-1,"8"],[1,"eight"],[0,"\"\n    },"]],"start1":2793,"start2":2793,"length1":17,"length2":21},{"diffs":[[0,"\": \""],[-1,"10\"\n    },\n    \"image12\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQHxEREZ8AAJAR/x8RkQAAkBEfHxGRAACQER8fEZEAAJAR//8fkQAAkBERERGRAACQHxEREZ8AAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"9"],[1,"ten\"\n    },\n    \"image3\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8O6e6e4PAADg8f///w4AAOAfHxEfDgAAkP8RH/EJAACQHx8RHwkAAODx////DgAA4P////8OAADw7p7p7g8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"deck\"\n    },\n    \"image12\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQHxEREZ8AAJAR/x8RkQAAkBEfHxGRAACQER8fEZEAAJAR//8fkQAAkBERERGRAACQHxEREZ8AAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"nine\"\n    },\n    \"image1\": {\n        \"data\": \"hwQQABAAAAAAAADgd+fu7gAAAOB35+4AAAAA4Hd3DgAAAADgd3cOAAAAAOB3dw4AAAAA4Hd3DgAAAADgd3cOAAAAAOB3dw4AAAAA4Hd3DgAAAADgd3cOAAAAAOB3dw4AAAAA4Hd3DgAAAADgd3cOAAAA8O93dw4AAADw73fn7gAAAPDvd+fu7g==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"Table\"\n    },\n    \"image14\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAAAAADwAA8AAADw////DwAAAPD/////DwAAAADw//8PAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"gun"],[0,"\"\n  "]],"start1":3095,"start2":3095,"length1":304,"length2":1197}]},{"type":"edited","filename":"images.g.ts","patch":[{"diffs":[[0,"mage"],[-1,"3\":\n            case \"deck\":return img`\n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . f e e 9 9 e e f . . . . . \n. . . e 1 f f f 1 f e . . . . . \n. . . e f 1 f 1 f f e . . . . . \n. . . e f f 1 f f f e . . . . . \n. . . 9 f 1 1 1 f f 9 . . . . . \n. . . 9 f 1 f 1 f f 9 . . . . . \n. . . e f 1 1 1 f f e . . . . . \n. . . e f f 1 f f f e . . . . . \n. . . e f 1 f 1 f f e . . . . . \n. . . f e e 9 9 e e f . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n`;\n            case \"image1\":\n            case \"Table\":return img`\n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . f f f \n. . . . . . . . . . . . . f f f \ne e e e e e e e e e e e e e e e \n7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 \n7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 \n7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 \ne e 7 7 7 7 7 7 7 7 7 7 7 7 e e \ne e e e e e e e e e e e e e e e \ne e . . . . . . . . . . . . e e \ne . . . . . . . . . . . . . . e \ne . . . . . . . . . . . . . . e \n`;\n            case \"image14\":\n            case \"gun\":return img`\n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . f f . . . . . . . \n. . . . . . . f f . . . . . . . \n. . . . . . . f f . . . . . . . \n. . . . . . . f f . . . . . . . \n. . . . . . f f f f . . . . . . \n. . . . . f . f f f . . . . . . \n. . . . . f . f f f . . . . . . \n. . . . . . f f f f . . . . . . \n. . . . . . . . f f . . . . . . \n. . . . . . . . f f . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n`;\n            case \"image4\":\n            case \"1"],[1,"4\":\n            case \"One"],[0,"\":re"]],"start1":669,"start2":669,"length1":1814,"length2":33},{"diffs":[[0,"  case \""],[-1,"2"],[1,"two"],[0,"\":return"]],"start1":1280,"start2":1280,"length1":17,"length2":19},{"diffs":[[0,"  case \""],[-1,"3"],[1,"three"],[0,"\":return"]],"start1":1873,"start2":1873,"length1":17,"length2":21},{"diffs":[[0,"  case \""],[-1,"4"],[1,"four"],[0,"\":return"]],"start1":2468,"start2":2468,"length1":17,"length2":20},{"diffs":[[0,"  case \""],[-1,"5"],[1,"five"],[0,"\":return"]],"start1":3062,"start2":3062,"length1":17,"length2":20},{"diffs":[[0,"  case \""],[-1,"6"],[1,"six"],[0,"\":return"]],"start1":3656,"start2":3656,"length1":17,"length2":19},{"diffs":[[0,"  case \""],[-1,"7"],[1,"seven"],[0,"\":return"]],"start1":4250,"start2":4250,"length1":17,"length2":21},{"diffs":[[0,"  case \""],[-1,"8"],[1,"eight"],[0,"\":return"]],"start1":4846,"start2":4846,"length1":17,"length2":21},{"diffs":[[0,"  case \""],[-1,"10"],[1,"ten"],[0,"\":return"]],"start1":5442,"start2":5442,"length1":18,"length2":19},{"diffs":[[0,". . . . . . \n`;\n"],[1,"            case \"image3\":\n            case \"deck\":return img`\n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . f e e 9 9 e e f . . . . . \n. . . e 1 f f f 1 f e . . . . . \n. . . e f 1 f 1 f f e . . . . . \n. . . e f f 1 f f f e . . . . . \n. . . 9 f 1 1 1 f f 9 . . . . . \n. . . 9 f 1 f 1 f f 9 . . . . . \n. . . e f 1 1 1 f f e . . . . . \n. . . e f f 1 f f f e . . . . . \n. . . e f 1 f 1 f f e . . . . . \n. . . f e e 9 9 e e f . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n`;\n"],[0,"            case"]],"start1":5982,"start2":5982,"length1":32,"length2":626},{"diffs":[[0,"  case \""],[-1,"9"],[1,"nine"],[0,"\":return"]],"start1":6630,"start2":6630,"length1":17,"length2":20},{"diffs":[[0,". . . . . . \n`;\n"],[1,"            case \"image1\":\n            case \"Table\":return img`\n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . f f f \n. . . . . . . . . . . . . f f f \ne e e e e e e e e e e e e e e e \n7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 \n7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 \n7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 \ne e 7 7 7 7 7 7 7 7 7 7 7 7 e e \ne e e e e e e e e e e e e e e e \ne e . . . . . . . . . . . . e e \ne . . . . . . . . . . . . . . e \ne . . . . . . . . . . . . . . e \n`;\n"],[0,"        }\n      "]],"start1":7171,"start2":7171,"length1":32,"length2":627}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[-1,"deck_list = [1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6,7,7,7,7,8,8,8,8,9,9,9,9,10,10,10,10]\np_hand: List[number] = None\nb_hand: List[number] = None\n\ndef p_draw():\n    global deck_list, p_hand\n    drawn_card = deck_list[randint(0, len(deck_list))]\n    p_hand.append(drawn_card)\n    deck_list.remove_element(drawn_card)\n\ndef b_draw():\n    global deck_list, b_hand\n    drawn_card = deck_list[randint(0, len(deck_list))]\n    b_hand.append(drawn_card)\n    deck_list.remove_element(drawn_card)\n"],[0,"\n"]],"start1":0,"start2":0,"length1":495,"length2":1}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"let deck_list = [1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 7, 7, 7, 7, 8, 8, 8, 8, 9, 9, 9, 9, 10, 10, 10, 10]\nlet p_hand : number[] = null\nlet b_hand : number[] = null\nfunction p_draw() {\n    \n    let drawn_card = deck_list[randint(0, deck_list.length)]\n    p_hand.push(drawn_card)\n    deck_list.removeElement(drawn_card)\n}\n\nfunction b_draw() {\n    \n    let drawn_card = deck_list[randint(0, deck_list.length)]\n    b_hand.push(drawn_card)\n    deck_list.removeElement(drawn_card)\n}\n"],[0,"\n"]],"start1":0,"start2":0,"length1":513,"length2":1}]}]},{"timestamp":1737122142467,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[-1,"\n"],[0,"deck_lis"]],"start1":0,"start2":0,"length1":9,"length2":8}]}]},{"timestamp":1737122743131,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[-1,"# setup "],[0,"\ndec"]],"start1":0,"start2":0,"length1":12,"length2":4},{"diffs":[[0,"1,1,"],[-1,"\n    2,\n    2,\n    2,\n    2,\n    3,\n    3,\n    3,\n    3,\n    4,\n    4,\n    4,\n    4,\n    5,\n    5,\n    5,\n    5,\n    6,\n    6,\n    6,\n    6,\n    7,\n    7,\n    7,\n    7,\n    8,\n    8,\n    8,\n    8,\n    9,\n    9,\n    9,\n    9,\n    10,10,10,10]\n# in theory deck is doable with only 1-10 once but this way feels nicer to the real game and technically includes card counting as a mechanic lol"],[1,"2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6,7,7,7,7,8,8,8,8,9,9,9,9,10,10,10,10]"],[0,"\np_h"]],"start1":18,"start2":18,"length1":395,"length2":84},{"diffs":[[0," = None\n"],[1,"\n"],[0,"def p_dr"]],"start1":147,"start2":147,"length1":16,"length2":17},{"diffs":[[0,"    "],[-1,"# player drawing isn't different from bot drawing really, just fits nicer in two funcs\n    "],[1,"global deck_list, p_hand\n    drawn_"],[0,"card"]],"start1":170,"start2":170,"length1":99,"length2":43},{"diffs":[[0,".append("],[1,"drawn_"],[0,"card)\n  "]],"start1":264,"start2":264,"length1":16,"length2":22},{"diffs":[[0,"ent("],[-1,"card)\n    update_p_hand()\ndef b_draw():"],[1,"drawn_card)\n\ndef b_draw():\n    global deck_list, b_hand"],[0,"\n   "]],"start1":309,"start2":309,"length1":47,"length2":63},{"diffs":[[0,"rd)\n"],[-1,"# now for the screwy bit \ndef update_p_hand():\n    card_to_add_num = p_hand.slice(-1)\n    card_to_add_str = convert_to_text(card_to_add_num)\n    print(card_to_add_str)\n# dispcard = sprites.create(assets.image(card_to_add_str))"],[1,"\n"]],"start1":491,"start2":491,"length1":230,"length2":5}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"//  setup \n"],[0,"let "]],"start1":0,"start2":0,"length1":15,"length2":4},{"diffs":[[0,"10]\n"],[-1,"//  in theory deck is doable with only 1-10 once but this way feels nicer to the real game and technically includes card counting as a mechanic lol\nlet p_hand : number[] = null\nlet b_hand : number[] = null\nfunction p_draw() {\n    //  player drawing isn't different from bot drawing really, just fits nicer in two funcs\n    let "],[1,"let p_hand : number[] = null\nlet b_hand : number[] = null\nfunction p_draw() {\n    \n    let drawn_"],[0,"card"]],"start1":137,"start2":137,"length1":335,"length2":105},{"diffs":[[0,"nd.push("],[1,"drawn_"],[0,"card)\n  "]],"start1":293,"start2":293,"length1":16,"length2":22},{"diffs":[[0,"ent("],[-1,"card)\n    update_p_hand("],[1,"drawn_card"],[0,")\n}\n"]],"start1":337,"start2":337,"length1":32,"length2":18},{"diffs":[[0," b_draw() {\n"],[1,"    \n"],[0,"    let draw"]],"start1":364,"start2":364,"length1":24,"length2":29},{"diffs":[[0,"\n}\n\n"],[-1,"//  now for the screwy bit \nfunction update_p_hand() {\n    let card_to_add_num = p_hand.slice(-1)\n    let card_to_add_str = convertToText(card_to_add_num)\n    console.log(card_to_add_str)\n}\n\n"]],"start1":509,"start2":509,"length1":195,"length2":4}]}]},{"timestamp":1737123348271,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"1,1,"],[-1,"2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6,7,7,7,7,8,8,8,8,9,9,9,9,"],[1,"\n    2,\n    2,\n    2,\n    2,\n    3,\n    3,\n    3,\n    3,\n    4,\n    4,\n    4,\n    4,\n    5,\n    5,\n    5,\n    5,\n    6,\n    6,\n    6,\n    6,\n    7,\n    7,\n    7,\n    7,\n    8,\n    8,\n    8,\n    8,\n    9,\n    9,\n    9,\n    9,\n    "],[0,"10,1"]],"start1":26,"start2":26,"length1":72,"length2":237},{"diffs":[[0,"mber] = "],[-1,"[]"],[1,"None"],[0,"\nb_hand:"]],"start1":433,"start2":433,"length1":18,"length2":20},{"diffs":[[0,"] = "],[-1,"[]\n"],[1,"None"],[0,"\ndef"]],"start1":465,"start2":465,"length1":11,"length2":12},{"diffs":[[0,"():\n"],[-1,"    global deck_list, p_hand\n"],[0,"    "]],"start1":484,"start2":484,"length1":37,"length2":8},{"diffs":[[0,"o funcs\n    "],[-1,"drawn_"],[0,"card = deck_"]],"start1":571,"start2":571,"length1":30,"length2":24},{"diffs":[[0,"  p_hand.append("],[-1,"drawn_"],[0,"card)\n    deck_l"]],"start1":630,"start2":630,"length1":38,"length2":32},{"diffs":[[0,"ove_element("],[-1,"drawn_"],[0,"card)\n    up"]],"start1":669,"start2":669,"length1":30,"length2":24},{"diffs":[[0,"_hand()\n"],[-1,"\n"],[0,"def b_dr"]],"start1":699,"start2":699,"length1":17,"length2":16},{"diffs":[[0,"wy bit \n"],[-1,"\n"],[0,"def upda"]],"start1":865,"start2":865,"length1":17,"length2":16},{"diffs":[[0,"d_to_add"],[1,"_num"],[0," = p_han"]],"start1":901,"start2":901,"length1":16,"length2":20},{"diffs":[[0,"hand"],[-1,"[-1:]"],[1,".slice(-1)\n    card_to_add_str = convert_to_text(card_to_add_num)"],[0,"\n   "]],"start1":918,"start2":918,"length1":13,"length2":73},{"diffs":[[0,"d_to_add"],[1,"_str"],[0,")\n# disp"]],"start1":1001,"start2":1001,"length1":16,"length2":20},{"diffs":[[0,"tr))"],[-1,"\np_draw()"]],"start1":1069,"start2":1069,"length1":13,"length2":4}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ber[] = "],[-1,"[]"],[1,"null"],[0,"\nlet b_h"]],"start1":316,"start2":316,"length1":18,"length2":20},{"diffs":[[0,"ber[] = "],[-1,"[]"],[1,"null"],[0,"\nfunctio"]],"start1":345,"start2":345,"length1":18,"length2":20},{"diffs":[[0,") {\n"],[-1,"    \n"],[0,"    "]],"start1":374,"start2":374,"length1":13,"length2":8},{"diffs":[[0,"o funcs\n    let "],[-1,"drawn_"],[0,"card = deck_list"]],"start1":463,"start2":463,"length1":38,"length2":32},{"diffs":[[0,"    p_hand.push("],[-1,"drawn_"],[0,"card)\n    deck_l"]],"start1":526,"start2":526,"length1":38,"length2":32},{"diffs":[[0,"moveElement("],[-1,"drawn_"],[0,"card)\n    up"]],"start1":564,"start2":564,"length1":30,"length2":24},{"diffs":[[0,"d_to_add"],[1,"_num"],[0," = p_han"]],"start1":823,"start2":823,"length1":16,"length2":20},{"diffs":[[0,"    "],[-1,"console.log(card_to_add)\n}\n\n//  dispcard = sprites.create(assets.image"],[1,"let card_to_add_str = convertToText(card_to_add_num)\n    console.log"],[0,"(car"]],"start1":855,"start2":855,"length1":78,"length2":76},{"diffs":[[0,"str)"],[-1,")\np_draw()"],[1,"\n}\n"],[0,"\n"]],"start1":940,"start2":940,"length1":15,"length2":8}]}]},{"timestamp":1737123814724,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[-1,"# testing things for helping shylah with the idea\n\n"],[0,"# se"]],"start1":0,"start2":0,"length1":55,"length2":4},{"diffs":[[0,"d = "],[-1,"convert_to_text("],[0,"p_ha"]],"start1":789,"start2":789,"length1":24,"length2":8},{"diffs":[[0,"and[-1:]"],[-1,")"],[0,"\n    pri"]],"start1":796,"start2":796,"length1":17,"length2":16},{"diffs":[[0,"dd)\n"],[-1,"    testvar = \"1\"\n    "],[1,"# disp"],[0,"card"]],"start1":824,"start2":824,"length1":30,"length2":14},{"diffs":[[0,"age("],[-1,"testva"],[1,"card_to_add_st"],[0,"r))\n"],[-1,"\n"],[0,"p_dr"]],"start1":865,"start2":865,"length1":19,"length2":26}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"//  testing things for helping shylah with the idea\n"],[0,"//  "]],"start1":0,"start2":0,"length1":56,"length2":4},{"diffs":[[0,"d = "],[-1,"convertToText("],[0,"p_ha"]],"start1":849,"start2":849,"length1":22,"length2":8},{"diffs":[[0,"lice(-1)"],[-1,")"],[0,"\n    con"]],"start1":861,"start2":861,"length1":17,"length2":16},{"diffs":[[0,"dd)\n"],[-1,"    let testvar = \"1\"\n    let "],[1,"}\n\n//  disp"],[0,"card"]],"start1":895,"start2":895,"length1":38,"length2":19},{"diffs":[[0,"mage"],[-1,"testvar)\n}\n"],[1,"(card_to_add_str))"],[0,"\np_d"]],"start1":940,"start2":940,"length1":19,"length2":26}]}]},{"timestamp":1737126307384,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"r = \"1\"\n"],[-1,"#"],[0,"    card"]],"start1":906,"start2":906,"length1":17,"length2":16}]}]},{"timestamp":1737126916404,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"[]\n\n"],[-1,"dictionary = Dictionary.create([1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n    [assets.image(\"\"\"\n            1\n            \"\"\"),\n        assets.image(\"\"\"\n            2\n            \"\"\"),\n        assets.image(\"\"\"\n            3\n            \"\"\"),\n        assets.image(\"\"\"\n            4\n            \"\"\"),\n        assets.image(\"\"\"\n            5\n            \"\"\"),\n        assets.image(\"\"\"\n            6\n            \"\"\"),\n        assets.image(\"\"\"\n            7\n            \"\"\"),\n        assets.image(\"\"\"\n            8\n            \"\"\"),\n        assets.image(\"\"\"\n            9\n            \"\"\"),\n        assets.image(\"\"\"\n            10\n            \"\"\")])\n\n\n\n"],[0,"def "]],"start1":353,"start2":353,"length1":644,"length2":8}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"\"1\"\n"],[-1,"}\n\n//"],[0,"    "],[1,"let"],[0," car"]],"start1":984,"start2":984,"length1":17,"length2":15},{"diffs":[[0,"mage"],[-1,"("],[0,"testvar)"],[-1,")"],[1,"\n}\n"],[0,"\np_d"]],"start1":1026,"start2":1026,"length1":18,"length2":19}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"3.0\""],[-1,",\n        \"Database\": \"github:The-Code-Zone/DB-Storage-pxt-extension#v0.0.3\""],[0,"\n   "]],"start1":150,"start2":150,"length1":84,"length2":8}]}]},{"timestamp":1737127517530,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"] = []\n\n"],[-1,"cards"],[1,"dictionary"],[0," = Dicti"]],"start1":349,"start2":349,"length1":21,"length2":26},{"diffs":[[0,"d = "],[1,"convert_to_text("],[0,"p_hand"],[-1,".pop("],[1,"[-1:]"],[0,")\n    p"],[-1,"_hand.append"],[1,"rint"],[0,"(car"]],"start1":1476,"start2":1476,"length1":38,"length2":46},{"diffs":[[0,"to_add)\n"],[1,"    testvar = \"1\"\n#"],[0,"    card"]],"start1":1524,"start2":1524,"length1":16,"length2":35},{"diffs":[[0,"age("],[-1,"\"deck\"))\n    card.set_image(Dictionary.get_value(cards, card_to_add))\n\np_draw()\np_draw()\np_draw()\np_draw()\n\nprint(len(p_hand)"],[1,"testvar))\n\np_draw("],[0,")"]],"start1":1586,"start2":1586,"length1":130,"length2":23}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," []\n"],[-1,"let cards = Dictionary.create([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [assets.image`\n            1\n            `, assets.image`\n            2\n            `, assets.image`\n            3\n            `, assets.image`\n            4\n            `, assets.image`\n            5\n            `, assets.image`\n            6\n            `, assets.image`\n            7\n            `, assets.image`\n            8\n            `, assets.image`\n            9\n            `, assets.image`\n            10\n            `])\n"],[0,"func"]],"start1":402,"start2":402,"length1":504,"length2":8},{"diffs":[[0,"card"],[-1,": Sprite;\n    let card_to_add = p_hand.pop()\n    p_hand.push(card)\n    card = sprites.create(assets.image`deck`)\n    card.setImage(Dictionary.get_value(cards, card_to_add))\n}\n\np_draw()\np_draw()\np_draw()\np_draw()\nconsole.log(p_hand.length"],[1,"_to_add = convertToText(p_hand.slice(-1))\n    console.log(card_to_add)\n    let testvar = \"1\"\n}\n\n//     card = sprites.create(assets.image(testvar))\np_draw("],[0,")\n"]],"start1":891,"start2":891,"length1":243,"length2":161}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"0.3\""],[-1,",\n        \"dict_ext\": \"github:The-Code-Zone/Dictionary-pxt-extension#v1.0.5\""],[0,"\n   "]],"start1":226,"start2":226,"length1":84,"length2":8}]}]},{"timestamp":1737127636664,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"d))\n"],[-1,"for i in range (3):\n    p_draw()\n\n\nprint (p_hand)"],[1,"\np_draw()\np_draw()\np_draw()\np_draw()\n"],[0,"\npri"]],"start1":1624,"start2":1624,"length1":57,"length2":45}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"_p_hand() {\n"],[1,"    let card: Sprite;\n"],[0,"    let card"]],"start1":1367,"start2":1367,"length1":24,"length2":46},{"diffs":[[0,"card"],[-1,"_to_add"],[0,")\n    "],[-1,"let "],[0,"card"]],"start1":1452,"start2":1452,"length1":25,"length2":14},{"diffs":[[0,"\n}\n\n"],[-1,"for (let i = 0; i < 3; i++) {\n    p_draw()\n}\nconsole.log(p_hand"],[1,"p_draw()\np_draw()\np_draw()\np_draw("],[0,")\nco"]],"start1":1563,"start2":1563,"length1":71,"length2":42}]}]},{"timestamp":1737130106020,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0," setup \n"],[-1,"\n"],[0,"deck_lis"]],"start1":52,"start2":52,"length1":17,"length2":16}]}]},{"timestamp":1737130599291,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"up \n"],[-1,"Card = SpriteKind.create()"],[0,"\ndec"]],"start1":56,"start2":56,"length1":34,"length2":8},{"diffs":[[0,"d()\n"],[-1,"controller.A.on_event(ControllerButtonEvent.PRESSED, p_draw)"],[0,"\n"],[1,""],[0,"def "]],"start1":1265,"start2":1265,"length1":69,"length2":9},{"diffs":[[0,"(\"deck\")"],[-1,", Card"],[0,")\n    ca"]],"start1":1558,"start2":1558,"length1":22,"length2":16},{"diffs":[[0,"d))\n"],[-1,"    #card.set_flag(SpriteFlag.RELATIVE_TO_CAMERA, True)\n    card.set_position(90, 90)\n    card.scale = 2\n\ndef hand_disp(card1, card2):\n    card1.x -= 1\n    card2.x +-1\n\nsprites.on_overlap(Card, Card, hand_disp)\n\n"],[0,"for "]],"start1":1625,"start2":1625,"length1":220,"length2":8},{"diffs":[[0," range ("],[-1,"2"],[1,"3"],[0,"):\n    p"]],"start1":1637,"start2":1637,"length1":17,"length2":17},{"diffs":[[0,"raw()\n\n\n"],[-1,"\n"],[0,"print (p"]],"start1":1656,"start2":1656,"length1":17,"length2":16}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"up \n"],[-1,"let Card = SpriteKind.create()\n"],[0,"let "]],"start1":59,"start2":59,"length1":39,"length2":8},{"diffs":[[0,"\n}\n\n"],[-1,"controller.A.onEvent(ControllerButtonEvent.Pressed, p_draw)\n"],[0,"func"]],"start1":1168,"start2":1168,"length1":68,"length2":8},{"diffs":[[0,"ge`deck`"],[-1,", Card"],[0,")\n    ca"]],"start1":1483,"start2":1483,"length1":22,"length2":16},{"diffs":[[0,"d))\n"],[-1,"    // card.set_flag(SpriteFlag.RELATIVE_TO_CAMERA, True)\n    card.setPosition(90, 90)\n    card.scale = 2\n}\n\nsprites.onOverlap(Card, Card, function hand_disp(card1: Sprite, card2: Sprite) {\n    card1.x -= 1\n    card2.x + -1\n})"],[1,"}\n"],[0,"\nfor"]],"start1":1549,"start2":1549,"length1":234,"length2":10},{"diffs":[[0," 0; i < "],[-1,"2"],[1,"3"],[0,"; i++) {"]],"start1":1568,"start2":1568,"length1":17,"length2":17}]}]},{"timestamp":1737131584584,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"():\n    "],[-1," "],[0,"card_to_"]],"start1":1540,"start2":1540,"length1":17,"length2":16}]}]},{"timestamp":1737132203985,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"hand():\n    "],[1," "],[0,"card_to_add "]],"start1":1536,"start2":1536,"length1":24,"length2":25},{"diffs":[[0,"op()"],[-1," # turns pop works on the main list even if it's not global what the hell\n    p_hand.append(card_to_add) # figure out why this comes up undefined sometimes... it breaks the dict"],[1,"\n    p_hand.append(card_to_add)"],[0,"\n   "]],"start1":1571,"start2":1571,"length1":185,"length2":39},{"diffs":[[0,"), Card)"],[-1,"  "],[0,"\n    car"]],"start1":1652,"start2":1652,"length1":18,"length2":16},{"diffs":[[0,"dd))"],[-1," # thanks Lew!"],[0,"\n   "]],"start1":1717,"start2":1717,"length1":22,"length2":8},{"diffs":[[0,"rue)"],[-1," # relative to camera means no overlap\n    card.set_position(90, 90) #just makes the cards centred a little bit\n    card.scale = 2 # too small at the start\n\ndef hand_disp(card1, card2): # such a shoddy way of doing it but hey, if it works it works"],[1,"\n    card.set_position(90, 90)\n    card.scale = 2\n\ndef hand_disp(card1, card2):"],[0,"\n   "]],"start1":1773,"start2":1773,"length1":255,"length2":87},{"diffs":[[0,"2.x +-1\n"],[1,"\n"],[0,"sprites."]],"start1":1882,"start2":1882,"length1":16,"length2":17}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"    "],[-1,"//  turns pop works on the main list even if it's not global what the hell\n    p_hand.push(card_to_add)\n    //  figure out why this comes up undefined sometimes... it breaks the dict"],[1,"p_hand.push(card_to_add)"],[0,"\n   "]],"start1":1505,"start2":1505,"length1":190,"length2":32},{"diffs":[[0,"d))\n"],[-1,"    //  thanks Lew!\n"],[0,"    "]],"start1":1646,"start2":1646,"length1":28,"length2":8},{"diffs":[[0,"rue)"],[-1," # relative to camera means no overlap\n    card.setPosition(90, 90)\n    // just makes the cards centred a little bit\n    card.scale = 2\n}\n\n//  too small at the start"],[1,"\n    card.setPosition(90, 90)\n    card.scale = 2\n}\n"],[0,"\nspr"]],"start1":1703,"start2":1703,"length1":173,"length2":59},{"diffs":[[0,") {\n"],[-1,"    //  such a shoddy way of doing it but hey, if it works it works\n"],[0,"    "]],"start1":1836,"start2":1836,"length1":76,"length2":8}]}]},{"timestamp":1737133488055,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"_list))]"],[-1," "],[0,"\n    p_h"]],"start1":1195,"start2":1195,"length1":17,"length2":16}]}]},{"timestamp":1737134096068,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"))] "],[-1,"#  YOU! WHY? THAT'S SO RUDE\n    try:\n        drawn_card\n        \n    console.log(\"drawn card is \" + drawn_card)"],[0,"\n   "]],"start1":1200,"start2":1200,"length1":119,"length2":8},{"diffs":[[0,"p_draw()\n\n\n\n"],[1,"print (p_hand)\nprint(len(p_hand))"]],"start1":2287,"start2":2287,"length1":12,"length2":45}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"h)]\n"],[-1,"    //   YOU! WHY? THAT'S SO RUDE\n    try {\n        drawn_card\n    }\n    \n    console.log(\"drawn card is \" + drawn_card)\n"],[0,"    "]],"start1":1108,"start2":1108,"length1":129,"length2":8},{"diffs":[[0," p_draw()\n}\n"],[1,"console.log(p_hand)\nconsole.log(p_hand.length)\n"]],"start1":2270,"start2":2270,"length1":12,"length2":59}]}]},{"timestamp":1737134643740,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"    "],[-1,"if type(drawn_card) is not int:\n"],[1,"try:\n        drawn_card\n        "],[0,"\n   "]],"start1":1232,"start2":1232,"length1":40,"length2":40}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"SO RUDE\n"],[1,"    try {\n        drawn_card\n    }\n    \n"],[0,"    cons"]],"start1":1138,"start2":1138,"length1":16,"length2":56}]}]},{"timestamp":1737135921633,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0," SO RUDE"],[1,"\n    if type(drawn_card) is not int:"],[0,"\n\n    co"]],"start1":1223,"start2":1223,"length1":16,"length2":52}]}]},{"timestamp":1737136118066,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"SO RUDE\n"],[1,"\n"],[0,"    cons"]],"start1":1224,"start2":1224,"length1":16,"length2":17}]}]},{"timestamp":1737137394385,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"p_draw)\n"],[-1,"\n"],[0,"def b_dr"]],"start1":1423,"start2":1423,"length1":17,"length2":16}]}]},{"timestamp":1737138039365,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,",10,10]\n"],[1,"# in theory deck is doable with only 1-10 once but this way feels nicer to the real game and technically includes card counting as a mechanic lol\n"],[0,"p_hand: "]],"start1":177,"start2":177,"length1":16,"length2":162},{"diffs":[[0,"       1"],[1,"\n            "],[0,"\"\"\"),\n  "]],"start1":470,"start2":470,"length1":16,"length2":29}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"10, 10]\n"],[1,"//  in theory deck is doable with only 1-10 once but this way feels nicer to the real game and technically includes card counting as a mechanic lol\n"],[0,"let p_ha"]],"start1":227,"start2":227,"length1":16,"length2":164}]}]},{"timestamp":1737138069471,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"       1"],[-1,"\n            "],[0,"\"\"\"),\n  "]],"start1":324,"start2":324,"length1":29,"length2":16}]}]},{"timestamp":1737138726294,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"list))] "],[1,"#  YOU! WHY? THAT'S SO RUDE"],[0,"\n    con"]],"start1":1050,"start2":1050,"length1":16,"length2":43}]}]},{"timestamp":1737139326629,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0," p_hand\n"],[1,"    # player drawing isn't different from bot drawing really, just fits nicer in two funcs\n"],[0,"    draw"]],"start1":904,"start2":904,"length1":16,"length2":107},{"diffs":[[0,"p() "],[-1,"\n    p_hand.append(card_to_add) \n    card = sprites.create(assets.image(\"deck\"), Card)  \n    card.set_image(Dictionary.get_value(cards, card_to_add)) \n    card.set_position(90, 90) \n    card.scale = 2 "],[1,"# turns pop works on the main list even if it's not global what the hell\n    p_hand.append(card_to_add) # figure out why this comes up undefined sometimes... it breaks the dict\n    card = sprites.create(assets.image(\"deck\"), Card)  \n    card.set_image(Dictionary.get_value(cards, card_to_add)) # thanks Lew!\n    #card.set_flag(SpriteFlag.RELATIVE_TO_CAMERA, True) # relative to camera means no overlap\n    card.set_position(90, 90) #just makes the cards centred a little bit\n    card.scale = 2 # too small at the start"],[0,"\n\nde"]],"start1":1474,"start2":1474,"length1":209,"length2":526},{"diffs":[[0,"ard2.x +"],[-1,"= "],[1,"-"],[0,"1\nsprite"]],"start1":2111,"start2":2111,"length1":18,"length2":17}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," {\n    \n"],[1,"    //  player drawing isn't different from bot drawing really, just fits nicer in two funcs\n"],[0,"    let "]],"start1":802,"start2":802,"length1":16,"length2":109},{"diffs":[[0,"st.length)]\n"],[1,"    //   YOU! WHY? THAT'S SO RUDE\n"],[0,"    console."]],"start1":952,"start2":952,"length1":24,"length2":58},{"diffs":[[0,"    "],[-1,"p_hand.push(card_to_add)\n    let card = sprites.create(assets.image`deck`, Card)\n    card.setImage(Dictionary.get_value(cards, card_to_add))\n    card.setPosition(90, 90)\n    card.scale = 2\n}\n"],[1,"//  turns pop works on the main list even if it's not global what the hell\n    p_hand.push(card_to_add)\n    //  figure out why this comes up undefined sometimes... it breaks the dict\n    let card = sprites.create(assets.image`deck`, Card)\n    card.setImage(Dictionary.get_value(cards, card_to_add))\n    //  thanks Lew!\n    // card.set_flag(SpriteFlag.RELATIVE_TO_CAMERA, True) # relative to camera means no overlap\n    card.setPosition(90, 90)\n    // just makes the cards centred a little bit\n    card.scale = 2\n}\n\n//  too small at the start"],[0,"\nspr"]],"start1":1438,"start2":1438,"length1":199,"length2":549},{"diffs":[[0,"ard2.x +"],[-1,"="],[0," "],[1,"-"],[0,"1\n})\nfor"]],"start1":2155,"start2":2155,"length1":18,"length2":18}]}]},{"timestamp":1737139754110,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"card2): "],[1,"# such a shoddy way of doing it but hey, if it works it works"],[0,"\n    car"]],"start1":1611,"start2":1611,"length1":16,"length2":77}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,": Sprite) {\n"],[1,"    //  such a shoddy way of doing it but hey, if it works it works\n"],[0,"    card1.x "]],"start1":1576,"start2":1576,"length1":24,"length2":92}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"0.5\""],[-1,",\n        \"arcade-tile-util\": \"github:microsoft/arcade-tile-util#v1.2.0\""],[0,"\n   "]],"start1":302,"start2":302,"length1":80,"length2":8}]}]},{"timestamp":1737140363497,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"2): "],[-1,"# such a shoddy way of doing it but hey, if it works it works"],[0,"\n   "]],"start1":1615,"start2":1615,"length1":69,"length2":8}]}]},{"timestamp":1737140413235,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"\n# setup"],[1," "],[0,"\nCard = "]],"start1":50,"start2":50,"length1":16,"length2":17},{"diffs":[[0,"10]\n"],[-1,"# in theory deck is doable with only 1-10 once but this way feels nicer to the real game and technically includes card counting as a mechanic lol\n"],[0,"p_ha"]],"start1":181,"start2":181,"length1":154,"length2":8},{"diffs":[[0,"and\n"],[-1,"    # player drawing isn't different from bot drawing really, just fits nicer in two funcs\n"],[0,"    "]],"start1":908,"start2":908,"length1":99,"length2":8},{"diffs":[[0,"ist)"],[-1,"-1"],[0,")] "],[-1,"#  YOU! WHY? THAT'S SO RUDE"],[0,"\n   "]],"start1":960,"start2":960,"length1":40,"length2":11},{"diffs":[[0,"rewy bit"],[1," "],[0,"\n\ndef up"]],"start1":1324,"start2":1324,"length1":16,"length2":17},{"diffs":[[0,"p() "],[-1,"# turns pop works on the main list even if it's not global what the hell\n    p_hand.append(card_to_add) # figure out why this comes up undefined sometimes... it breaks the dict"],[1,"\n    p_hand.append(card_to_add) "],[0,"\n   "]],"start1":1383,"start2":1383,"length1":184,"length2":40},{"diffs":[[0,"eck\"), Card)"],[1,"  "],[0,"\n    card.se"]],"start1":1461,"start2":1461,"length1":24,"length2":26},{"diffs":[[0,"d)) "],[-1,"# thanks Lew!\n    #card.set_flag(SpriteFlag.RELATIVE_TO_CAMERA, True) # relative to camera means no overlap"],[0,"\n   "]],"start1":1533,"start2":1533,"length1":115,"length2":8},{"diffs":[[0,"ion("],[-1,"8"],[1,"9"],[0,"0, 90) "],[-1,"#just makes the cards centred a little bit\n    card.scale = 2 # too small at the start"],[1,"\n    card.scale = 2 "],[0,"\n\nde"]],"start1":1556,"start2":1556,"length1":102,"length2":36},{"diffs":[[0,"rd2.x +="],[1," "],[0,"1\nsprite"]],"start1":1704,"start2":1704,"length1":16,"length2":17}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"/  setup"],[1," "],[0,"\nlet Car"]],"start1":53,"start2":53,"length1":16,"length2":17},{"diffs":[[0,"10]\n"],[-1,"//  in theory deck is doable with only 1-10 once but this way feels nicer to the real game and technically includes card counting as a mechanic lol\n"],[0,"let "]],"start1":231,"start2":231,"length1":156,"length2":8},{"diffs":[[0,"   \n"],[-1,"    //  player drawing isn't different from bot drawing really, just fits nicer in two funcs\n"],[0,"    "]],"start1":806,"start2":806,"length1":101,"length2":8},{"diffs":[[0,"ngth"],[-1," - 1)]\n    //   YOU! WHY? THAT'S SO RUDE"],[1,")]"],[0,"\n   "]],"start1":864,"start2":864,"length1":48,"length2":10},{"diffs":[[0,"rewy bit"],[1," "],[0,"\nfunctio"]],"start1":1239,"start2":1239,"length1":16,"length2":17},{"diffs":[[0,"    "],[-1,"//  turns pop works on the main list even if it's not global what the hell\n    p_hand.push(card_to_add)\n    //  figure out why this comes up undefined sometimes... it breaks the dict\n    let card = sprites.create(assets.image`deck`, Card)\n    card.setImage(Dictionary.get_value(cards, card_to_add))\n    //  thanks Lew!\n    // card.set_flag(SpriteFlag.RELATIVE_TO_CAMERA, True) # relative to camera means no overlap"],[1,"p_hand.push(card_to_add)\n    let card = sprites.create(assets.image`deck`, Card)\n    card.setImage(Dictionary.get_value(cards, card_to_add))"],[0,"\n   "]],"start1":1311,"start2":1311,"length1":422,"length2":148},{"diffs":[[0,"osition("],[-1,"8"],[1,"9"],[0,"0, 90)\n "]],"start1":1469,"start2":1469,"length1":17,"length2":17},{"diffs":[[0,"    "],[-1,"// just makes the cards centred a little bit\n    card.scale = 2\n}\n\n//  too small at the start"],[1,"card.scale = 2\n}\n"],[0,"\nspr"]],"start1":1485,"start2":1485,"length1":101,"length2":25},{"diffs":[[0,") {\n"],[-1,"    //  such a shoddy way of doing it but hey, if it works it works\n"],[0,"    "]],"start1":1584,"start2":1584,"length1":76,"length2":8}]}]},{"timestamp":1737145102336,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"_list)-1"],[1,")"],[0,"] #  YOU"]],"start1":1194,"start2":1194,"length1":16,"length2":17}]}]},{"timestamp":1737145709670,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"ck_list)"],[-1,")"],[1,"-1"],[0,"] #  YOU"]],"start1":1192,"start2":1192,"length1":17,"length2":18},{"diffs":[[0,"n_card)\n"],[-1,"\n"],[0,"    deck"]],"start1":1301,"start2":1301,"length1":17,"length2":16},{"diffs":[[0,"p)\n\n"],[-1,"\n\nd\ntimer.throttle(\"action\", 500,"],[1,"for i in range (2):\n   "],[0," p_draw"],[1,"("],[0,")\n"],[1,"\n\n\n"]],"start1":2331,"start2":2331,"length1":46,"length2":40}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"_list.length"],[1," - 1"],[0,")]\n    //   "]],"start1":1096,"start2":1096,"length1":24,"length2":28},{"diffs":[[0,"\n})\n"],[-1,"timer.throttle(\"action\", 500,"],[1,"for (let i = 0; i < 2; i++) {\n   "],[0," p_draw"],[1,"("],[0,")\n"],[1,"}\n"]],"start1":2316,"start2":2316,"length1":42,"length2":49}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"2.0\""],[-1,",\n        \"Timers\": \"github:microsoft/arcade-timers#v1.1.0\""],[0,"\n   "]],"start1":374,"start2":374,"length1":67,"length2":8}]}]},{"timestamp":1737146312439,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0," []\n"],[-1,"card_to_rem: number = None"],[0,"\ncar"]],"start1":378,"start2":378,"length1":34,"length2":8},{"diffs":[[0,"hand"],[-1,", card_to_rem"],[0,"\n   "]],"start1":1052,"start2":1052,"length1":21,"length2":8},{"diffs":[[0,"UDE\n    "],[-1,"#"],[0,"console."]],"start1":1227,"start2":1227,"length1":17,"length2":16},{"diffs":[[0,"rd)\n"],[1,"\n"],[0,"    "],[-1,"card_to_rem = drawn_card\n    timer.after(50, deckdiscard)\n    #"],[0,"deck"]],"start1":1304,"start2":1304,"length1":75,"length2":13},{"diffs":[[0,"w)\n\n"],[-1,"def deckdiscard():\n    deck_list.remove_element(card_to_rem)\n    console.log(len(deck_list))\n\n"],[0,"def "]],"start1":1428,"start2":1428,"length1":102,"length2":8},{"diffs":[[0,"\n\n\nd"],[-1,"ef throttle_draw():\n    "],[1,"\n"],[0,"time"]],"start1":2334,"start2":2334,"length1":32,"length2":9},{"diffs":[[0,"aw)\n"],[-1,"controller.B.on_event(ControllerButtonEvent.PRESSED, throttle_draw)\n\nfor i in range(40):\n    throttle_draw()"]],"start1":2373,"start2":2373,"length1":112,"length2":4}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," []\n"],[-1,"let card_to_rem : number = null\n"],[0,"let "]],"start1":432,"start2":432,"length1":40,"length2":8},{"diffs":[[0,"RUDE\n   "],[-1," //"],[0," console"]],"start1":1140,"start2":1140,"length1":19,"length2":16},{"diffs":[[0,"    "],[-1,"card_to_rem = drawn_card\n    timer.after(50, function deckdiscard() {\n        deck_list.removeElement(card_to_rem)\n        console.log(deck_list.length)\n    })\n    // deck_list.remove_e"],[1,"deck_list.removeE"],[0,"leme"]],"start1":1220,"start2":1220,"length1":193,"length2":25},{"diffs":[[0,"\n})\n"],[-1,"function throttle_draw() {\n    "],[0,"time"]],"start1":2312,"start2":2312,"length1":39,"length2":8},{"diffs":[[0,"aw)\n"],[-1,"}\n\ncontroller.B.onEvent(ControllerButtonEvent.Pressed, throttle_draw)\nfor (let i = 0; i < 40; i++) {\n    throttle_draw()\n}\n"]],"start1":2350,"start2":2350,"length1":127,"length2":4}]}]},{"timestamp":1737146400677,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"r] = []\n"],[1,"card_to_rem: number = None\n"],[0,"cards = "]],"start1":374,"start2":374,"length1":16,"length2":43},{"diffs":[[0,", p_hand"],[1,", card_to_rem"],[0,"\n    # p"]],"start1":1074,"start2":1074,"length1":16,"length2":29},{"diffs":[[0,"n_card)\n"],[1,"    card_to_rem = drawn_card\n    timer.after(50, deckdiscard)"],[0,"\n    #de"]],"start1":1340,"start2":1340,"length1":16,"length2":77},{"diffs":[[0,"_draw)\n\n"],[1,"def deckdiscard():\n    deck_list.remove_element(card_to_rem)\n    console.log(len(deck_list))\n\n"],[0,"def b_dr"]],"start1":1526,"start2":1526,"length1":16,"length2":110}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"mber[] = []\n"],[1,"let card_to_rem : number = null\n"],[0,"let cards = "]],"start1":424,"start2":424,"length1":24,"length2":56},{"diffs":[[0,"drawn_card)\n"],[1,"    card_to_rem = drawn_card\n    timer.after(50, function deckdiscard() {\n        deck_list.removeElement(card_to_rem)\n        console.log(deck_list.length)\n    })\n"],[0,"    // deck_"]],"start1":1243,"start2":1243,"length1":24,"length2":188}]}]},{"timestamp":1737290843666,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"r] = []\n"],[-1,"d\n"],[0,"cards = "]],"start1":374,"start2":374,"length1":18,"length2":16}]}]},{"timestamp":1737291445445,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0," []\n"],[-1,"shuffled_deck: List[number] = []\n\nwhile len(shuffled_deck) <= 40:\n    blorb = deck_list[randint(0, len(deck_list)-1)]\n    shuffled_deck.append(blorb)\n    deck_list.remove_element(blorb)\n    if len(deck_list) == 0:\n        break\n\n"],[1,"d"],[0,"\ncar"]],"start1":378,"start2":378,"length1":237,"length2":9},{"diffs":[[0,"throttle_draw)\n\n"],[1,"for i in range(40):\n    throttle_draw()"]],"start1":2456,"start2":2456,"length1":16,"length2":55}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"let blorb: number;\n"],[0,"//  "]],"start1":0,"start2":0,"length1":23,"length2":4},{"diffs":[[0," []\n"],[-1,"let shuffled_deck : number[] = []\nwhile (shuffled_deck.length <= 40) {\n    blorb = deck_list[randint(0, deck_list.length - 1)]\n    shuffled_deck.push(blorb)\n    deck_list.removeElement(blorb)\n    if (deck_list.length == 0) {\n        break\n    }\n    \n}\n"],[0,"let "]],"start1":432,"start2":432,"length1":260,"length2":8},{"diffs":[[0,"+= 1\n})\n"],[1,"function throttle_draw() {\n    timer.throttle(\"action\", 500, p_draw)\n}\n\n"],[0,"controll"]],"start1":2315,"start2":2315,"length1":16,"length2":88},{"diffs":[[0,"Pressed,"],[-1," function"],[0," throttl"]],"start1":2438,"start2":2438,"length1":25,"length2":16},{"diffs":[[0,"draw"],[-1,"("],[1,")\nfor (let i = 0; i < 40; i++"],[0,") {\n    "],[-1,"timer."],[0,"throttle"],[-1,"(\"action\", 500, p"],[0,"_draw"],[1,"("],[0,")\n}"],[-1,")"],[0,"\n"]],"start1":2456,"start2":2456,"length1":54,"length2":59}]}]},{"timestamp":1737292089027,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0," []\n"],[-1,"shuffle() # makecode not having pythons random.shuffle is so bad\n\ndef shuffle(): # what if we just make it work like an actual deck of cards, lets shuffle!\n    deck_list = [1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6,7,7,7,7,8,8,8,8,9,9,9,9,10,10,10,10]\n    "],[1,"\n"],[0,"whil"]],"start1":411,"start2":411,"length1":270,"length2":9},{"diffs":[[0," <= 40:\n"],[-1,"    "],[0,"    blor"]],"start1":440,"start2":440,"length1":20,"length2":16},{"diffs":[[0,"1)]\n    "],[-1," "],[-1,"   "],[0,"shuffled"]],"start1":496,"start2":496,"length1":20,"length2":16},{"diffs":[[0,"rb)\n    "],[-1,"  "],[-1,"  "],[0,"deck_lis"]],"start1":528,"start2":528,"length1":20,"length2":16},{"diffs":[[0,"rb)\n    "],[-1,"   "],[-1," "],[0,"if len(d"]],"start1":564,"start2":564,"length1":20,"length2":16},{"diffs":[[0," 0:\n"],[-1,"            console.log(len(shuffled_deck))\n    "],[0,"    "]],"start1":592,"start2":592,"length1":56,"length2":8},{"diffs":[[0,"break\n\n\n"],[-1,"\n"],[0,"cards = "]],"start1":604,"start2":604,"length1":17,"length2":16},{"diffs":[[0,"ncs\n    "],[-1,"#"],[0,"drawn_ca"]],"start1":1373,"start2":1373,"length1":17,"length2":16},{"diffs":[[0,"    "],[-1,"drawn_card = shuffled_deck.pop()\n    p_hand.append(drawn_card)\n    console.log(\"cards remaining in deck: \" + len(shuffled_deck))"],[1,"p_hand.append(drawn_card)\n"],[0,"\n   "]],"start1":1508,"start2":1508,"length1":136,"length2":34},{"diffs":[[0,"d = "],[-1,"shuffled_deck.pop()\n    b_hand.append(drawn_card)\n "],[1,"deck_list[randint(0, len(deck_list))]\n    b_hand.append(drawn_card)\n    deck_list.remove_element(drawn_card)"],[0,"\n# n"]],"start1":1690,"start2":1690,"length1":59,"length2":116},{"diffs":[[0,"ottle_draw)\n"],[1,"\n"]],"start1":2687,"start2":2687,"length1":12,"length2":13}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[1,"let blorb: number;\n"],[0,"//  testing "]],"start1":0,"start2":0,"length1":12,"length2":31},{"diffs":[[0," []\n"],[-1,"shuffle()\n//  makecode not having pythons random.shuffle is so bad\nfunction shuffle() {\n    let blorb: number;\n    //  what if we just make it work like an actual deck of cards, lets shuffle!\n    let deck_list = [1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 7, 7, 7, 7, 8, 8, 8, 8, 9, 9, 9, 9, 10, 10, 10, 10]\n    "],[0,"whil"]],"start1":485,"start2":485,"length1":349,"length2":8},{"diffs":[[0,"th <= 40) {\n"],[-1,"    "],[0,"    blorb = "]],"start1":514,"start2":514,"length1":28,"length2":24},{"diffs":[[0,"1)]\n    "],[-1,"  "],[-1,"  "],[0,"shuffled"]],"start1":578,"start2":578,"length1":20,"length2":16},{"diffs":[[0,"push(blorb)\n"],[-1,"    "],[0,"    deck_lis"]],"start1":600,"start2":600,"length1":28,"length2":24},{"diffs":[[0,"rb)\n    "],[-1," "],[-1,"   "],[0,"if (deck"]],"start1":643,"start2":643,"length1":20,"length2":16},{"diffs":[[0,"    "],[-1,"    console.log(shuffled_deck.length)\n            break\n        }\n        "],[1,"break"],[0,"\n    }\n"],[1,"    \n"],[0,"}\n"],[-1,"\n"],[0,"let "]],"start1":684,"start2":684,"length1":92,"length2":27},{"diffs":[[0,"ncs\n    "],[-1,"//"],[1,"let"],[0," drawn_c"]],"start1":1317,"start2":1317,"length1":18,"length2":19},{"diffs":[[0,"(0, "],[-1,"len("],[0,"deck"]],"start1":1359,"start2":1359,"length1":12,"length2":8},{"diffs":[[0,"list"],[-1,"))] #"],[1,".length)]\n    // "],[0,"  YO"]],"start1":1368,"start2":1368,"length1":13,"length2":25},{"diffs":[[0,"    "],[-1,"let drawn_card = shuffled_deck.pop()\n    p_hand.push(drawn_card)\n    console.log(\"cards remaining in deck: \" + shuffled_deck.length"],[1,"p_hand.push(drawn_card"],[0,")\n  "]],"start1":1466,"start2":1466,"length1":139,"length2":30},{"diffs":[[0,"d = "],[-1,"shuffled_deck.pop()\n    b_hand.push"],[1,"deck_list[randint(0, deck_list.length)]\n    b_hand.push(drawn_card)\n    deck_list.removeElement"],[0,"(dra"]],"start1":1658,"start2":1658,"length1":43,"length2":103}]}]},{"timestamp":1737292689351,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"e()\n"],[-1,"bot = sprites.create(assets.image(\"bot\"), SpriteKind.enemy)\nbot.scale = 2\nscene.set_tile_map_level(assets.tilemap(\"level\"))\n"],[0,"deck"]],"start1":82,"start2":82,"length1":132,"length2":8},{"diffs":[[0,"d)\n "],[-1,"   update_b_hand()\n\n\ndef update_b_hand():\n    card = sprites.create(assets.image(\"deck\"), Card)\n"],[0,"\n# n"]],"start1":2170,"start2":2170,"length1":104,"length2":8},{"diffs":[[0,"and_disp)\n\n\n"],[1,"\ndef throttle_draw():\n    timer.throttle(\"action\", 500, p_draw)\ncontroller.B.on_event(ControllerButtonEvent.PRESSED, throttle_draw)\n"]],"start1":2927,"start2":2927,"length1":12,"length2":144}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"e()\n"],[-1,"let bot = sprites.create(assets.image`bot`, SpriteKind.Enemy)\nbot.scale = 2\nscene.setTileMapLevel(assets.tilemap`level`)\n"],[0,"let "]],"start1":89,"start2":89,"length1":129,"length2":8},{"diffs":[[0,"10, 10]\n"],[1,""],[0,"//  in t"]],"start1":226,"start2":226,"length1":16,"length2":16},{"diffs":[[0,"`])\n"],[-1,"controller.A.onEvent(ControllerButtonEvent.Pressed, "],[0,"func"]],"start1":1602,"start2":1602,"length1":60,"length2":8},{"diffs":[[0," p_draw() {\n"],[1,""],[0,"    \n    // "]],"start1":1614,"start2":1614,"length1":24,"length2":24},{"diffs":[[0,"hand()\n}"],[1,"\n\ncontroller.A.onEvent(ControllerButtonEvent.Pressed, p_draw"],[0,")\nfuncti"]],"start1":2054,"start2":2054,"length1":16,"length2":76},{"diffs":[[0,"rd)\n"],[-1,"    update_b_hand()\n}\n\nfunction update_b_hand() {\n    let card = sprites.create(assets.image`deck`, Card)\n"],[0,"}\n\n/"]],"start1":2209,"start2":2209,"length1":114,"length2":8},{"diffs":[[0,".x -= 1\n"],[-1,""],[0,"    card"]],"start1":3009,"start2":3009,"length1":16,"length2":16},{"diffs":[[0,"+= 1\n})\n"],[1,"controller.B.onEvent(ControllerButtonEvent.Pressed, function throttle_draw() {\n    timer.throttle(\"action\", 500, p_draw)\n})\n"]],"start1":3029,"start2":3029,"length1":8,"length2":132}]}]},{"timestamp":1737293289859,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"= 2\n"],[-1,"bot.y -= 20\np_stood = False\nb_stood = False\n"],[0,"scen"]],"start1":156,"start2":156,"length1":52,"length2":8},{"diffs":[[0,"hand()\n\n"],[1,"\n"],[0,"def upda"]],"start1":2310,"start2":2310,"length1":16,"length2":17},{"diffs":[[0,"ard)"],[-1,"\n    card.scale = 1.5\n\ndef b_behaviour():\n    global b_stood\n    for i in "],[0,"\n\n# "]],"start1":2389,"start2":2389,"length1":82,"length2":8},{"diffs":[[0,")\n\n\n"],[-1,"# right, now to make the actual game lmaoo\n\n# start the game by giving the player and bot 1 card each!\np_draw()\nb_draw()\n\n# and now we begin proper!\n\ndef game_loop():\n    global p_stood, b_stood\n    if p_stood == False:\n        choice = game.ask(\"hit or stand?\")\n        if choice == True:\n            p_draw()\n\n        else:\n            stood = True \n    \n    b_behaviour()\n\n"]],"start1":3155,"start2":3155,"length1":380,"length2":4}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"= 2\n"],[-1,"bot.y -= 20\nlet p_stood = false\nlet b_stood = false\n"],[0,"scen"]],"start1":165,"start2":165,"length1":60,"length2":8},{"diffs":[[0,"    `])\n"],[1,"controller.A.onEvent(ControllerButtonEvent.Pressed, "],[0,"function"]],"start1":1719,"start2":1719,"length1":16,"length2":68},{"diffs":[[0," p_draw() {\n"],[-1,""],[0,"    \n    // "]],"start1":1787,"start2":1787,"length1":24,"length2":24},{"diffs":[[0,"()\n}"],[-1,"\n\ncontroller.A.onEvent(ControllerButtonEvent.Pressed, p_draw"],[0,")\nfu"]],"start1":2231,"start2":2231,"length1":68,"length2":8},{"diffs":[[0,"rd)\n"],[-1,"    card.scale = 1.5\n}\n\nfunction b_behaviour() {\n    \n"],[0,"}\n\n/"]],"start1":2428,"start2":2428,"length1":62,"length2":8},{"diffs":[[0,"= 1\n"],[1,""],[0,"})\n"],[-1,"//  right, now to make the actual game lmaoo\n//  start the game by giving the player and bot 1 card each!\np_draw()\nb_draw()\n//  and now we begin proper!\nfunction game_loop() {\n    let choice: boolean;\n    let stood: boolean;\n    \n    if (p_stood == false) {\n        choice = game.ask(\"hit or stand?\")\n        if (choice == true) {\n            p_draw()\n        } else {\n            stood = true\n        }\n        \n    }\n    \n    b_behaviour()\n}\n\n"]],"start1":3249,"start2":3249,"length1":452,"length2":7}]}]},{"timestamp":1737293897515,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"    "],[-1,"total = 0\n    for i in b_hand:\n        total += b_hand[i]\n    if total >= 17:\n        b_stood = True\n    else:\n        b_draw()\n    return(total)"],[1,"for i in "],[0,"\n\n# "]],"start1":2497,"start2":2497,"length1":153,"length2":17},{"diffs":[[0,"p)\n\n"],[-1,"def p_total():\n    total = 0\n    for i in p_hand:\n        total += p_hand[i]\n    return(total)"],[0,"\n# r"]],"start1":3271,"start2":3271,"length1":102,"length2":8},{"diffs":[[0,"    "],[-1,"b_total ="],[1,"\n   "],[0," b_b"]],"start1":3628,"start2":3628,"length1":17,"length2":12},{"diffs":[[0,"r()\n"],[-1,"    p_tot = p_total()\n    i"],[1,"\n"]],"start1":3647,"start2":3647,"length1":31,"length2":5}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ur()"],[-1,": number {\n    \n    let total = 0\n    for (let i of b_hand) {\n        total += b_hand[i]\n    }\n    if (total >= 17) {\n        b_stood = true\n    } else {\n        b_draw()\n    }\n    \n    return total"],[1," {\n    "],[0,"\n}\n\n"]],"start1":2534,"start2":2534,"length1":206,"length2":15},{"diffs":[[0,"\n})\n"],[-1,"function p_total(): number {\n    let total = 0\n    for (let i of p_hand) {\n        total += p_hand[i]\n    }\n    return total\n}\n\n"],[0,"//  "]],"start1":3366,"start2":3366,"length1":136,"length2":8},{"diffs":[[0,"    "],[-1,"let b_total = b_behaviour()\n    let p_tot = p_total"],[1,"b_behaviour"],[0,"()\n}"]],"start1":3794,"start2":3794,"length1":59,"length2":19}]}]},{"timestamp":1737294498474,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"lse\n"],[-1,"p_tot = 0\nb_tot = 0\n"],[0,"scen"]],"start1":200,"start2":200,"length1":28,"length2":8},{"diffs":[[0,"huffle!\n"],[-1,"\n"],[0,"    deck"]],"start1":731,"start2":731,"length1":17,"length2":16},{"diffs":[[0,"k))\n"],[-1,"            game_loop()\n"],[0,"    "]],"start1":1081,"start2":1081,"length1":32,"length2":8},{"diffs":[[0,"tood"],[-1,", b_tot"],[0,"\n    "],[-1,"b_"],[0,"tot"],[1,"al"],[0," = 0"]],"start1":2492,"start2":2492,"length1":25,"length2":18},{"diffs":[[0,"        "],[-1,"b_"],[0,"tot"],[1,"al"],[0," += b_ha"]],"start1":2532,"start2":2532,"length1":21,"length2":21},{"diffs":[[0,"\n    if "],[-1,"b_"],[0,"tot"],[1,"al"],[0," >= 17:\n"]],"start1":2558,"start2":2558,"length1":21,"length2":21},{"diffs":[[0,"    b_draw()"],[1,"\n    return(total)"],[0,"\n\n# now for "]],"start1":2616,"start2":2616,"length1":24,"length2":42},{"diffs":[[0,"    "],[-1,"global p_tot\n    p_"],[0,"tot"],[1,"al"],[0," = 0"]],"start1":3426,"start2":3426,"length1":30,"length2":13},{"diffs":[[0,"        "],[-1,"p_"],[0,"tot"],[1,"al"],[0," += p_ha"]],"start1":3461,"start2":3461,"length1":21,"length2":21},{"diffs":[[0,"hand[i]\n"],[1,"    return(total)"],[0,"\n# right"]],"start1":3480,"start2":3480,"length1":16,"length2":33},{"diffs":[[0,"    "],[-1,"if not "],[0,"b_"],[-1,"s"],[0,"to"],[-1,"od:\n       "],[1,"tal ="],[0," b_b"]],"start1":3858,"start2":3858,"length1":31,"length2":17},{"diffs":[[0,"()\n    p_tot"],[1," = p_tot"],[0,"al()\n    if "]],"start1":3883,"start2":3883,"length1":24,"length2":32},{"diffs":[[0,"   i"],[-1,"f p_tot and b_tot == 20:\n        game.splash(\"It's a draw!\")\n        shuffle() \n    elif p_tot == 20:\n        game.game_over(True)\n    elif b_tot == 20:\n        game.game_over(False)"]],"start1":3909,"start2":3909,"length1":186,"length2":4}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"lse\n"],[-1,"let p_tot = 0\nlet b_tot = 0\n"],[0,"scen"]],"start1":217,"start2":217,"length1":36,"length2":8},{"diffs":[[0,"th)\n"],[-1,"            game_loop()\n"],[0,"    "]],"start1":1233,"start2":1233,"length1":32,"length2":8},{"diffs":[[0,"aviour()"],[1,": number"],[0," {\n    \n"]],"start1":2530,"start2":2530,"length1":16,"length2":24},{"diffs":[[0,"   \n    "],[-1,"b_"],[1,"let "],[0,"tot"],[1,"al"],[0," = 0\n   "]],"start1":2550,"start2":2550,"length1":21,"length2":25},{"diffs":[[0,"        "],[-1,"b_"],[0,"tot"],[1,"al"],[0," += b_ha"]],"start1":2600,"start2":2600,"length1":21,"length2":21},{"diffs":[[0,"    if ("],[-1,"b_"],[0,"tot"],[1,"al"],[0," >= 17) "]],"start1":2633,"start2":2633,"length1":21,"length2":21},{"diffs":[[0," }\n    \n"],[1,"    return total\n"],[0,"}\n\n//  n"]],"start1":2712,"start2":2712,"length1":16,"length2":33},{"diffs":[[0,"al()"],[-1," {\n    \n    p_"],[1,": number {\n    let "],[0,"tot"],[1,"al"],[0," = 0"]],"start1":3575,"start2":3575,"length1":25,"length2":32},{"diffs":[[0,"        "],[-1,"p_"],[0,"tot"],[1,"al"],[0," += p_ha"]],"start1":3636,"start2":3636,"length1":21,"length2":21},{"diffs":[[0,"]\n    }\n"],[1,"    return total\n"],[0,"}\n\n//  r"]],"start1":3661,"start2":3661,"length1":16,"length2":33},{"diffs":[[0,"    "],[-1,"if (!"],[1,"let "],[0,"b_"],[-1,"s"],[0,"to"],[-1,"od) {\n       "],[1,"tal ="],[0," b_b"]],"start1":4113,"start2":4113,"length1":31,"length2":21},{"diffs":[[0,"    "],[-1,"}\n    \n    p_total()\n    if (p_tot && b_tot == 20) {\n        game.splash(\"It's a draw!\")\n        shuffle()\n    } else if (p_tot == 20) {\n        game.gameOver(true)\n    } else if (b_tot == 20) {\n        game.gameOver(false)\n    }\n    "],[1,"let p_tot = p_total()"],[0,"\n}\n\n"]],"start1":4145,"start2":4145,"length1":242,"length2":29}]}]},{"timestamp":1737294993106,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"le!\n"],[-1,"    p_hand: List[number] = []\n    b_hand: List[number] = []"],[0,"\n   "]],"start1":755,"start2":755,"length1":67,"length2":8},{"diffs":[[0,"fled_deck))\n"],[1,"            game_loop()\n"],[0,"            "]],"start1":1094,"start2":1094,"length1":24,"length2":48},{"diffs":[[0,"proper!\n"],[1,"\n"],[0,"def game"]],"start1":3681,"start2":3681,"length1":16,"length2":17},{"diffs":[[0,"tood"],[-1,", b_tot, p_tot\n    pause(1000)"],[0,"\n   "]],"start1":3730,"start2":3730,"length1":38,"length2":8},{"diffs":[[0,"se:\n            "],[-1,"p_"],[0,"stood = True \n  "]],"start1":3862,"start2":3862,"length1":34,"length2":32},{"diffs":[[0,"le()"],[-1,"\n        b_stood = False\n        p_stood = False"],[0," \n  "]],"start1":4027,"start2":4027,"length1":56,"length2":8},{"diffs":[[0,"if b_tot == 20:\n"],[1,""],[0,"        game.gam"]],"start1":4090,"start2":4090,"length1":32,"length2":32},{"diffs":[[0,"lse)"],[-1,"\n    elif p_tot > 20:\n        p_stood = True\n    elif b_tot > 20:\n        b_stood = True\n    game_loop()\n\ngame_loop()"]],"start1":4131,"start2":4131,"length1":121,"length2":4}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"le!\n"],[-1,"    let p_hand : number[] = []\n    let b_hand : number[] = []\n"],[0,"    "]],"start1":859,"start2":859,"length1":70,"length2":8},{"diffs":[[0,"eck.length)\n"],[1,"            game_loop()\n"],[0,"            "]],"start1":1253,"start2":1253,"length1":24,"length2":48},{"diffs":[[0,"    "],[-1,"\n    pause(1000)"],[1,"let stood: boolean;\n    "],[0,"\n   "]],"start1":3889,"start2":3889,"length1":24,"length2":32},{"diffs":[[0,"e {\n            "],[-1,"p_"],[0,"stood = true\n   "]],"start1":4053,"start2":4053,"length1":34,"length2":32},{"diffs":[[0,"e()\n"],[-1,"        b_stood = false\n        p_stood = false\n"],[0,"    "]],"start1":4261,"start2":4261,"length1":56,"length2":8},{"diffs":[[0,"   }"],[-1," else if (p_tot > 20) {\n        p_stood = true\n    } else if (b_tot > 20) {\n        b_stood = true\n    }\n    \n    game_loop()\n}\n\ngame_loop()"],[1,"\n    \n}\n"],[0,"\n"]],"start1":4383,"start2":4383,"length1":145,"length2":13}]}]},{"timestamp":1737407911455,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"\n    if "],[1,"not"],[0," b_stood"]],"start1":3957,"start2":3957,"length1":16,"length2":19}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"    if ("],[1,"!"],[0,"b_stood)"]],"start1":4144,"start2":4144,"length1":16,"length2":17}]}]},{"timestamp":1737408513102,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"    "],[-1,"if len(b_hand) == 1:\n        b_tot = b_hand.pop()\n        b_hand.append(b_tot)\n    else:\n        to_add = b_hand.pop()\n        b_tot += to_add\n        b_hand.append(to_add)"],[1,"b_tot = 0\n    for i in b_hand:\n        b_tot += b_hand[i]"],[0,"\n   "]],"start1":2584,"start2":2584,"length1":180,"length2":65},{"diffs":[[0,"aw()"],[-1,"\n    console.log(\"b_tot)\n    console.log(b_hand)\n    "],[0,"\n\n# "]],"start1":2711,"start2":2711,"length1":61,"length2":8},{"diffs":[[0,"    "],[-1,"if len(b_hand) == 1:\n            p_tot = p_hand.pop()\n            p_hand.append(p_tot)\n    else:\n            to_add = p_hand.pop()\n   "],[1,"p_tot = 0\n    for i in p_hand:\n"],[0,"        "],[-1," "],[0,"p_to"]],"start1":3512,"start2":3512,"length1":151,"length2":47},{"diffs":[[0," += "],[-1,"to_add\n            p_hand.append(to_add)\n"],[1,"p_hand[i]"],[0,"\n\n# "]],"start1":3560,"start2":3560,"length1":49,"length2":17},{"diffs":[[0,"_draw()\n"],[-1,"p_total()\n"],[0,"b_draw()"]],"start1":3679,"start2":3679,"length1":26,"length2":16},{"diffs":[[0,"aw()"],[-1,"\n            p_total()"],[0,"\n\n  "]],"start1":3910,"start2":3910,"length1":30,"length2":8},{"diffs":[[0," if "],[1," "],[0,"b_stood"],[-1," == False"],[0,":\n  "]],"start1":3961,"start2":3961,"length1":24,"length2":16},{"diffs":[[0,"    "],[-1,"console.log(p_tot)\n    console.log(b_stood"],[1,"p_total("],[0,")\n  "]],"start1":3997,"start2":3997,"length1":50,"length2":16}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"    "],[-1,"let to_add: number;\n    \n    if (b_hand.length == 1) {\n        b_tot = b_hand.pop()\n        b_hand.push(b_tot)\n    } else {\n        to_add ="],[1,"\n    b_tot = 0\n    for (let i of"],[0," b_hand"],[-1,".pop()"],[1,") {"],[0,"\n   "]],"start1":2631,"start2":2631,"length1":161,"length2":50},{"diffs":[[0," += "],[-1,"to_add\n        b_hand.push(to_add)"],[1,"b_hand[i]"],[0,"\n    }\n"],[-1,"    \n"],[0,"    "]],"start1":2691,"start2":2691,"length1":54,"length2":24},{"diffs":[[0,"   \n"],[-1,"    console.log(b_tot)\n    console.log(b_hand)\n"],[0,"}\n\n/"]],"start1":2794,"start2":2794,"length1":55,"length2":8},{"diffs":[[0,"    "],[-1,"let to_add: number;\n    \n    if (b_hand.length == 1) {\n        p_tot = p_hand.pop()\n        p_hand.push(p_tot)\n    } else {\n        to_add ="],[1,"\n    p_tot = 0\n    for (let i of"],[0," p_hand"],[-1,".pop()"],[1,") {"],[0,"\n   "]],"start1":3643,"start2":3643,"length1":161,"length2":50},{"diffs":[[0," += "],[-1,"to_add\n        p_hand.push(to_add)"],[1,"p_hand[i]"],[0,"\n    }\n"],[-1,"    \n"],[0,"}\n\n/"]],"start1":3703,"start2":3703,"length1":54,"length2":24},{"diffs":[[0,"_draw()\n"],[-1,"p_total()\n"],[0,"b_draw()"]],"start1":3833,"start2":3833,"length1":26,"length2":16},{"diffs":[[0,"w()\n"],[-1,"            p_total()\n"],[0,"    "]],"start1":4066,"start2":4066,"length1":30,"length2":8},{"diffs":[[0," if (b_stood"],[-1," == false"],[0,") {\n        "]],"start1":4147,"start2":4147,"length1":33,"length2":24},{"diffs":[[0,"    "],[-1,"console.log(p_tot)\n    console.log(b_stood"],[1,"p_total("],[0,")\n  "]],"start1":4196,"start2":4196,"length1":50,"length2":16}]}]},{"timestamp":1737409119743,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"ot)\n"],[-1,"        b_hand.append(0)\n"],[0,"    "]],"start1":2663,"start2":2663,"length1":33,"length2":8},{"diffs":[[0,"og(\""],[-1,"bots total is: \" + "],[0,"b_to"]],"start1":2844,"start2":2844,"length1":27,"length2":8},{"diffs":[[0," if len("],[-1,"p"],[1,"b"],[0,"_hand) ="]],"start1":3683,"start2":3683,"length1":17,"length2":17},{"diffs":[[0,"_add)\n\n\n"],[-1,"\n"],[0,"# right,"]],"start1":3871,"start2":3871,"length1":17,"length2":16},{"diffs":[[0,"l()\n"],[-1,"console.log(\"player total is: \" + p_tot)\n"],[0,"b_dr"]],"start1":3997,"start2":3997,"length1":49,"length2":8},{"diffs":[[0,"log("],[-1,"\"player total is: \" + "],[0,"p_to"]],"start1":4353,"start2":4353,"length1":30,"length2":8},{"diffs":[[0,"    "],[-1,"checkwin() \n"],[1,"if p_tot and b_tot == 20:\n "],[0,"    "],[1,"   "],[0,"game"],[-1,"_loop()\n\ndef checkwin"],[1,".splash(\"It's a draw!\")\n        shuffle"],[0,"()"],[-1,":"],[0,"\n    "],[-1,"p_bust"],[1,"    b_stood"],[0," = F"]],"start1":4389,"start2":4389,"length1":63,"length2":103},{"diffs":[[0,"    "],[-1,"b_bust"],[1,"    p_stood"],[0," = False"],[1," "],[0,"\n    "],[1,"el"],[0,"if p"]],"start1":4497,"start2":4497,"length1":27,"length2":35},{"diffs":[[0," elif p_tot "],[-1,">"],[1,"=="],[0," 20:\n       "]],"start1":4525,"start2":4525,"length1":25,"length2":26},{"diffs":[[0,"    "],[-1,"p_bust = "],[1,"game.game_over("],[0,"True"],[1,")"],[0,"\n    "],[1,"el"],[0,"if b"]],"start1":4548,"start2":4548,"length1":26,"length2":35},{"diffs":[[0,"f b_tot "],[-1,">"],[1,"=="],[0," 20:\n   "]],"start1":4580,"start2":4580,"length1":17,"length2":18},{"diffs":[[0,"    "],[-1,"b_bust = True"],[1,"game.game_over(False)"],[0,"\n    "],[1,"el"],[0,"if p_"],[-1,"bust and b_bust or"],[1,"tot > 20:\n       "],[0," p_"],[1,"s"],[0,"to"],[-1,"t =="],[1,"od = True\n    elif"],[0," b_tot"],[1," > 20"],[0,":\n  "]],"start1":4599,"start2":4599,"length1":64,"length2":93},{"diffs":[[0,"    "],[-1,"game.splash(\"it's a draw! Resetting...\")\n        "],[1,"b_stood = True\n    game_loop()\n"],[0,"\ngam"]],"start1":4694,"start2":4694,"length1":57,"length2":39}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ot)\n"],[-1,"        b_hand.push(0)\n"],[0,"    "]],"start1":2742,"start2":2742,"length1":31,"length2":8},{"diffs":[[0,"log("],[-1,"\"bots total is: \" + "],[0,"b_to"]],"start1":2951,"start2":2951,"length1":28,"length2":8},{"diffs":[[0,"    if ("],[-1,"p"],[1,"b"],[0,"_hand.le"]],"start1":3860,"start2":3860,"length1":17,"length2":17},{"diffs":[[0,"l()\n"],[-1,"console.log(\"player total is: \" + p_tot)\n"],[0,"b_dr"]],"start1":4176,"start2":4176,"length1":49,"length2":8},{"diffs":[[0,"log("],[-1,"\"player total is: \" + "],[0,"p_to"]],"start1":4578,"start2":4578,"length1":30,"length2":8},{"diffs":[[0,"    "],[-1,"checkwin()\n    game_loop()\n}\n\nfunction checkwin() {\n    let p_bust"],[1,"if (p_tot && b_tot == 20) {\n        game.splash(\"It's a draw!\")\n        shuffle()\n        b_stood"],[0," = f"]],"start1":4614,"start2":4614,"length1":74,"length2":105},{"diffs":[[0,"    "],[-1,"let b_bust"],[1,"    p_stood"],[0," = f"]],"start1":4724,"start2":4724,"length1":18,"length2":19},{"diffs":[[0,"= false\n    "],[1,"} else "],[0,"if (p_tot > "]],"start1":4740,"start2":4740,"length1":24,"length2":31},{"diffs":[[0,"e if (p_tot "],[-1,">"],[1,"=="],[0," 20) {\n     "]],"start1":4757,"start2":4757,"length1":25,"length2":26},{"diffs":[[0,"    "],[-1,"p_bust = "],[1,"game.gameOver("],[0,"true"],[1,")"],[0,"\n    }"],[-1,"\n    \n   "],[1," else if (b_tot == 20) {\n        game.gameOver(false)\n    } else"],[0," if ("],[-1,"b"],[1,"p"],[0,"_tot"]],"start1":4782,"start2":4782,"length1":42,"length2":103},{"diffs":[[0,"        "],[-1,"b_bust"],[1,"p_stood"],[0," = true\n"]],"start1":4894,"start2":4894,"length1":22,"length2":23},{"diffs":[[0,"   }"],[-1,"\n    \n    if (p_bust && b_bust || p_tot == b_tot) {\n        game.splash(\"it's a draw! Resetting...\")\n    }\n    "],[1," else if (b_tot > 20) {\n        b_stood = true\n    }\n    \n    game_loop()"],[0,"\n}\n\n"]],"start1":4918,"start2":4918,"length1":119,"length2":81}]}]},{"timestamp":1737409732187,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"_tot"],[-1,", p_stood\n"],[0,"\n   "]],"start1":3719,"start2":3719,"length1":18,"length2":8},{"diffs":[[0,"se:\n"],[-1,"        if not p_stood:\n"],[0,"    "]],"start1":3821,"start2":3821,"length1":32,"length2":8},{"diffs":[[0,"dd)\n"],[-1,"    if p_tot > 20:\n        game.splash(\"You're bust!!!\")\n        p_stood = True"],[0,"\n"],[1,""],[0,"\n\n# "]],"start1":3917,"start2":3917,"length1":88,"length2":9},{"diffs":[[0,"= True \n"],[-1,"            p_total()\n"],[0,"    if b"]],"start1":4372,"start2":4372,"length1":38,"length2":16},{"diffs":[[0,"od)\n"],[-1,"    if b_stood and p_stood:\n    "],[0,"    "]],"start1":4493,"start2":4493,"length1":40,"length2":8},{"diffs":[[0,"kwin() \n"],[1,""],[0,"    game"]],"start1":4505,"start2":4505,"length1":16,"length2":16},{"diffs":[[0,"    "],[-1,"npt = 20 - p_tot\n    bpt = 20 - b_tot\n    console.log(\"player npt: \" + npt)\n    console.log(\"bot bpt: \" + bpt)\n    if p_tot < b_tot:\n        game.set_game_over_message(True, \"You're closer to 20! You Win!\")\n        game.game_over(True)\n    else:\n        game.set_game_over_message(False, \"The Bot is closer to 20! You Lose...\")\n        game.game_over(False)"],[1,"    "],[0,"\ngam"]],"start1":4759,"start2":4759,"length1":365,"length2":12}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"else"],[-1," if (!p_stood)"],[0," {\n"],[1,""],[0,"    "]],"start1":3995,"start2":3995,"length1":25,"length2":11},{"diffs":[[0,"   \n"],[-1,"    if (p_tot > 20) {\n        game.splash(\"You're bust!!!\")\n        p_stood = true\n    }\n    \n"],[0,"}\n\n/"]],"start1":4091,"start2":4091,"length1":102,"length2":8},{"diffs":[[0," = true\n"],[-1,"            p_total()\n"],[0,"        "]],"start1":4551,"start2":4551,"length1":38,"length2":16},{"diffs":[[0,"od)\n"],[-1,"    if (b_stood && p_stood) {\n    "],[0,"    "]],"start1":4716,"start2":4716,"length1":42,"length2":8},{"diffs":[[0,"ckwin()\n"],[-1,"    }\n    \n"],[0,"    game"]],"start1":4727,"start2":4727,"length1":27,"length2":16},{"diffs":[[0,"tot == b_tot) {\n"],[1,""],[0,"        game.spl"]],"start1":4962,"start2":4962,"length1":32,"length2":32},{"diffs":[[0,"   \n"],[-1,"    let npt = 20 - p_tot\n    let bpt = 20 - b_tot\n    console.log(\"player npt: \" + npt)\n    console.log(\"bot bpt: \" + bpt)\n    if (p_tot < b_tot) {\n        game.setGameOverMessage(true, \"You're closer to 20! You Win!\")\n        game.gameOver(true)\n    } else {\n        game.setGameOverMessage(false, \"The Bot is closer to 20! You Lose...\")\n        game.gameOver(false)\n    }\n    \n"],[0,"}\n\ng"]],"start1":5034,"start2":5034,"length1":387,"length2":8}]}]},{"timestamp":1737410340910,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"_hand()\n"],[-1,"#"],[0,"controll"]],"start1":2270,"start2":2270,"length1":17,"length2":16},{"diffs":[[0,".\")\n"],[-1,"        shuffle()\n"],[0,"    "]],"start1":4922,"start2":4922,"length1":26,"length2":8},{"diffs":[[0," 20 - p_tot\n"],[1,""],[0,"    bpt = 20"]],"start1":4935,"start2":4935,"length1":24,"length2":24},{"diffs":[[0," if "],[-1,"n"],[0,"p"],[1,"_to"],[0,"t < b"],[-1,"pt and p_bust == False"],[1,"_tot"],[0,":\n  "]],"start1":5044,"start2":5044,"length1":37,"length2":21},{"diffs":[[0,"  el"],[-1,"if bpt < npt and b_bust == False:\n        game.set_game_over_message(False, \"The Bot is closer to 20! You Lose...\")\n        game.game_over(False)\n    elif p_bust == False and b_bust == True:\n        game.set_game_over_message(True, \"You're closer to 20! You Win!\")\n        game.game_over(True)\n    elif b_bust == False and p_bust == Tru"],[1,"s"],[0,"e:\n "]],"start1":5168,"start2":5168,"length1":344,"length2":9}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"nd()\n}\n\n"],[-1,"// "],[0,"controll"]],"start1":2319,"start2":2319,"length1":19,"length2":16},{"diffs":[[0,"ler.A.on"],[-1,"_e"],[1,"E"],[0,"vent(Con"]],"start1":2334,"start2":2334,"length1":18,"length2":17},{"diffs":[[0,"nt.P"],[-1,"RESSED"],[1,"ressed"],[0,", p_"]],"start1":2367,"start2":2367,"length1":14,"length2":14},{"diffs":[[0,".\")\n"],[-1,"        shuffle()\n"],[0,"    }\n"],[1,""],[0,"    "]],"start1":5198,"start2":5198,"length1":32,"length2":14},{"diffs":[[0,"if ("],[-1,"n"],[0,"p"],[1,"_to"],[0,"t < b"],[-1,"pt && p_bust == false"],[1,"_tot"],[0,") {\n"]],"start1":5340,"start2":5340,"length1":36,"length2":21},{"diffs":[[0,".gameOver(true)\n"],[1,""],[0,"    } else if (b"]],"start1":5444,"start2":5444,"length1":32,"length2":32},{"diffs":[[0,"else"],[-1," if (bpt < npt && b_bust == false) {\n        game.setGameOverMessage(false, \"The Bot is closer to 20! You Lose...\")\n        game.gameOver(false)\n    } else if (p_bust == false && b_bust == true) {\n        game.setGameOverMessage(true, \"You're closer to 20! You Win!\")\n        game.gameOver(true)\n    } else if (b_bust == false && p_bust == true)"],[0," {\n "]],"start1":5466,"start2":5466,"length1":353,"length2":8}]}]},{"timestamp":1737410957414,"editorVersion":"2.0.3","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"art\""],[-1," id=\"!*6sR}9.~}}Q9[ZJaNrC\""],[0," x=\""]],"start1":100,"start2":100,"length1":34,"length2":8}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0," 20\n"],[-1,"table = sprites.create(assets.image(\"Table\"))\ntable.z = 4\ntable.scale = 5\n"],[0,"p_st"]],"start1":168,"start2":168,"length1":82,"length2":8},{"diffs":[[0,"            "],[-1,"#"],[0,"console.log("]],"start1":1121,"start2":1121,"length1":25,"length2":24},{"diffs":[[0,"n_card)\n    "],[-1,"#"],[0,"console.log("]],"start1":2142,"start2":2142,"length1":25,"length2":24},{"diffs":[[0,"_draw()\n    "],[-1,"#"],[0,"console.log("]],"start1":2849,"start2":2849,"length1":25,"length2":24},{"diffs":[[0," \" + b_tot)\n    "],[-1,"#"],[0,"console.log(b_ha"]],"start1":2888,"start2":2888,"length1":33,"length2":32},{"diffs":[[0,"tart"],[-1,"\n    card.z = 10"],[0,"\n\nde"]],"start1":3520,"start2":3520,"length1":24,"length2":8},{"diffs":[[0,"total()\n"],[-1,"#"],[0,"console."]],"start1":4152,"start2":4152,"length1":17,"length2":16},{"diffs":[[0," p_tot)\n"],[1,""],[0,"b_draw()"]],"start1":4193,"start2":4193,"length1":16,"length2":16},{"diffs":[[0,"viour()\n    "],[-1,"#"],[0,"console.log("]],"start1":4555,"start2":4555,"length1":25,"length2":24},{"diffs":[[0," p_tot)\n    "],[-1,"#"],[0,"console.log("]],"start1":4600,"start2":4600,"length1":25,"length2":24},{"diffs":[[0,"        "],[-1,"game.game_over(False"],[1,"shuffle("],[0,")\n    np"]],"start1":4927,"start2":4927,"length1":36,"length2":24},{"diffs":[[0,"- b_tot\n    "],[-1,"#"],[0,"console.log("]],"start1":4979,"start2":4979,"length1":25,"length2":24},{"diffs":[[0," + npt)\n    "],[-1,"#"],[0,"console.log("]],"start1":5017,"start2":5017,"length1":25,"length2":24}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," 20\n"],[-1,"let table = sprites.create(assets.image`Table`)\ntable.z = 4\ntable.scale = 5\n"],[0,"let "]],"start1":177,"start2":177,"length1":84,"length2":8},{"diffs":[[0,"        "],[-1," //"],[0," console"]],"start1":1284,"start2":1284,"length1":19,"length2":16},{"diffs":[[0,"ole.log("],[-1,"len("],[0,"shuffled"]],"start1":1297,"start2":1297,"length1":20,"length2":16},{"diffs":[[0,"huffled_deck"],[-1,")"],[1,".length"],[0,")\n          "]],"start1":1306,"start2":1306,"length1":25,"length2":31},{"diffs":[[0,"wn_card)\n   "],[-1," //"],[0," console.log"]],"start1":2183,"start2":2183,"length1":27,"length2":24},{"diffs":[[0,"ck: \" + "],[-1,"len("],[0,"shuffled"]],"start1":2230,"start2":2230,"length1":20,"length2":16},{"diffs":[[0,"led_deck"],[-1,")"],[1,".length"],[0,")\n    //"]],"start1":2243,"start2":2243,"length1":17,"length2":23},{"diffs":[[0," }\n    \n"],[-1,"}\n\n//"],[1,"   "],[0," console"]],"start1":2958,"start2":2958,"length1":21,"length2":19},{"diffs":[[0," b_tot)\n"],[-1,"//"],[1,"   "],[0," console"]],"start1":3001,"start2":3001,"length1":18,"length2":19},{"diffs":[[0,"b_hand)\n"],[1,"}\n\n"],[0,"//  now "]],"start1":3025,"start2":3025,"length1":16,"length2":19},{"diffs":[[0,"ale = 2\n"],[-1,"    "],[1,"}\n\n"],[0,"//  too "]],"start1":3633,"start2":3633,"length1":20,"length2":19},{"diffs":[[0,"art\n"],[-1,"    card.z = 10\n}\n\n"],[0,"spri"]],"start1":3667,"start2":3667,"length1":27,"length2":8},{"diffs":[[0,"total()\n"],[-1,"// "],[0,"console."]],"start1":4327,"start2":4327,"length1":19,"length2":16},{"diffs":[[0,"  }\n    \n   "],[-1," //"],[0," console.log"]],"start1":4775,"start2":4775,"length1":27,"length2":24},{"diffs":[[0,"+ p_tot)\n   "],[-1," //"],[0," console.log"]],"start1":4820,"start2":4820,"length1":27,"length2":24},{"diffs":[[0,"        "],[-1,"game.gameOver(false"],[1,"shuffle("],[0,")\n    }\n"]],"start1":5206,"start2":5206,"length1":35,"length2":24},{"diffs":[[0," - b_tot\n   "],[-1," //"],[0," console.log"]],"start1":5276,"start2":5276,"length1":27,"length2":24},{"diffs":[[0,"\" + npt)\n   "],[-1," //"],[0," console.log"]],"start1":5314,"start2":5314,"length1":27,"length2":24}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":665,"start2":665,"length1":52,"length2":8}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1716548119640,"editorVersion":"2.0.2","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><block type=\"pxt-on-start\" x=\"0\" y=\"0\"><statement name=\"HANDLER\"><block type=\"mixer_play_sound\"><field name=\"sound\">music.baDing</field></block></statement></block></xml>","main.ts":"","README.md":" ","assets.json":"","main.py":"music.ba_ding.play()","tilemap.g.jres":"{\n    \"transparency16\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"tilemapTile\": true\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myTiles\"\n    }\n}","tilemap.g.ts":"","pxt.json":"{\n    \"name\": \"with music\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\",\n        \"main.py\",\n        \"tilemap.g.jres\",\n        \"tilemap.g.ts\"\n    ],\n    \"targetVersions\": {\n        \"target\": \"1.12.2\",\n        \"pxt\": \"8.5.2\"\n    },\n    \"preferredEditor\": \"pyprj\"\n}\n"}},{"timestamp":1718042395638,"editorVersion":"2.0.3","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block></xml>","main.ts":"","README.md":" ","assets.json":"","main.py":"\n","pxt.json":"{\n    \"name\": \"Untitled\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\"\n}\n"}},{"timestamp":1737144921066,"editorVersion":"2.0.3","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block></xml>","main.ts":"","README.md":" ","assets.json":"","main.py":"# testing things for helping shylah with the idea\n\n# setup\nCard = SpriteKind.create()\ndeck_list = [1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6,7,7,7,7,8,8,8,8,9,9,9,9,10,10,10,10]\n# in theory deck is doable with only 1-10 once but this way feels nicer to the real game and technically includes card counting as a mechanic lol\np_hand: List[number] = []\nb_hand: List[number] = []\n\ncards = Dictionary.create([1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n    [assets.image(\"\"\"\n            1\n            \"\"\"),\n        assets.image(\"\"\"\n            2\n            \"\"\"),\n        assets.image(\"\"\"\n            3\n            \"\"\"),\n        assets.image(\"\"\"\n            4\n            \"\"\"),\n        assets.image(\"\"\"\n            5\n            \"\"\"),\n        assets.image(\"\"\"\n            6\n            \"\"\"),\n        assets.image(\"\"\"\n            7\n            \"\"\"),\n        assets.image(\"\"\"\n            8\n            \"\"\"),\n        assets.image(\"\"\"\n            9\n            \"\"\"),\n        assets.image(\"\"\"\n            10\n            \"\"\")])\n\n\n\ndef p_draw():\n    global deck_list, p_hand\n    # player drawing isn't different from bot drawing really, just fits nicer in two funcs\n    drawn_card = deck_list[randint(0, len(deck_list)-1)] #  YOU! WHY? THAT'S SO RUDE\n    console.log(\"drawn card is \" + drawn_card)\n    p_hand.append(drawn_card)\n    deck_list.remove_element(drawn_card)\n    update_p_hand()\ncontroller.A.on_event(ControllerButtonEvent.PRESSED, p_draw)\n\ndef b_draw():\n    drawn_card = deck_list[randint(0, len(deck_list))]\n    b_hand.append(drawn_card)\n    deck_list.remove_element(drawn_card)\n# now for the screwy bit\n\ndef update_p_hand():\n    card_to_add = p_hand.pop() # turns pop works on the main list even if it's not global what the hell\n    p_hand.append(card_to_add) # figure out why this comes up undefined sometimes... it breaks the dict\n    card = sprites.create(assets.image(\"deck\"), Card)\n    card.set_image(Dictionary.get_value(cards, card_to_add)) # thanks Lew!\n    #card.set_flag(SpriteFlag.RELATIVE_TO_CAMERA, True) # relative to camera means no overlap\n    card.set_position(80, 90) #just makes the cards centred a little bit\n    card.scale = 2 # too small at the start\n\ndef hand_disp(card1, card2): # such a shoddy way of doing it but hey, if it works it works\n    card1.x -= 1\n    card2.x +=1\nsprites.on_overlap(Card, Card, hand_disp)\n\nfor i in range (2):\n    p_draw()\n\n\n\n","images.g.jres":"{\n    \"image2\": {\n        \"data\": \"hwQUABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////AAAA8P///wDw////AAAA/////w/w////AADw///////w////AAD/////////////AAD/////////////AAD/////////////AAD/////////////AAD/////////////AAD/////////////AAD/////////////AADw///////w////AAAA/////w/w////AAAA8P///wAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"bot\"\n    },\n    \"image3\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8O6e6e4PAADg8f///w4AAOAfHxEfDgAAkP8RH/EJAACQHx8RHwkAAODx////DgAA4P////8OAADw7p7p7g8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"deck\"\n    },\n    \"image1\": {\n        \"data\": \"hwQQABAAAAAAAADgd+fu7gAAAOB35+4AAAAA4Hd3DgAAAADgd3cOAAAAAOB3dw4AAAAA4Hd3DgAAAADgd3cOAAAAAOB3dw4AAAAA4Hd3DgAAAADgd3cOAAAAAOB3dw4AAAAA4Hd3DgAAAADgd3cOAAAA8O93dw4AAADw73fn7gAAAPDvd+fu7g==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"Table\"\n    },\n    \"image14\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAAAAADwAA8AAADw////DwAAAPD/////DwAAAADw//8PAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"gun\"\n    },\n    \"image4\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQHxEREZ8AAJAREf8RkQAAkBHx/xGRAACQEf//H5EAAJAR8f8RkQAAkBER/xGRAACQHxEREZ8AAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"1\"\n    },\n    \"image5\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQEhEREZIAAJARIRERkQAAkBESESKRAACQERIhIZEAAJARIRIhkQAAkBERERGRAACQEhEREZIAAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"2\"\n    },\n    \"image7\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQHxEREZ8AAJARERERkQAAkBEfER+RAACQ8RER8ZEAAJDxER/xkQAAkBH/8R+RAACQHxEREZ8AAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"3\"\n    },\n    \"image6\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQEhEREZIAAJARERIRkQAAkBEhIRGRAACQERIhEZEAAJARIiIikQAAkBERERGRAACQEhEREZIAAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"4\"\n    },\n    \"image8\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQHxEREZ8AAJAR/x8fkQAAkBEfHx+RAACQER8fH5EAAJARH/EfkQAAkBERERGRAACQHxEREZ8AAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"5\"\n    },\n    \"image9\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQEhEREZIAAJARIiISkQAAkBESEhKRAACQERISEpEAAJAREiISkQAAkBERERGRAACQEhEREZIAAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"6\"\n    },\n    \"image11\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQHxEREZ8AAJARER8RkQAAkBH//x+RAACQER8fEZEAAJARHxERkQAAkBERERGRAACQHxEREZ8AAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"7\"\n    },\n    \"image10\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQEhEREZIAAJARIiISkQAAkBESEhKRAACQERISEpEAAJAREhISkQAAkBEiIhKRAACQEhEREZIAAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"8\"\n    },\n    \"image13\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQEhEREZIAAJARIiIRkQAAkBERERGRAACQESIiEZEAAJAREiERkQAAkBEiIhGRAACQEhEREZIAAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"10\"\n    },\n    \"image12\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQHxEREZ8AAJAR/x8RkQAAkBEfHxGRAACQER8fEZEAAJAR//8fkQAAkBERERGRAACQHxEREZ8AAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"9\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myImages\"\n    }\n}","images.g.ts":"","tilemap.g.jres":"{\n    \"transparency16\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"tilemapTile\": true\n    },\n    \"tile3\": {\n        \"data\": \"hwQQABAAAAAiIiIiIiIiIv//////////IiIiIiIiIiL//////////yIiIiIiIiIi//////////8iIiIiIiIiIv//////////IiIiIiIiIiL//////////yIiIiIiIiIi//////////8iIiIiIiIiIv//////////IiIiIiIiIiL//////////w==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"tilemapTile\": true,\n        \"displayName\": \"myTile1\"\n    },\n    \"level1\": {\n        \"id\": \"level1\",\n        \"mimeType\": \"application/mkcd-tilemap\",\n        \"data\": \"MTAxMDAwMTAwMDAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMA==\",\n        \"tileset\": [\n            \"myTiles.transparency16\",\n            \"myTiles.tile3\"\n        ],\n        \"displayName\": \"level\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myTiles\"\n    }\n}","tilemap.g.ts":"","pxt.json":"{\n    \"name\": \"Untitled\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\",\n        \"arcade-text\": \"github:microsoft/arcade-text#v1.3.0\",\n        \"Database\": \"github:The-Code-Zone/DB-Storage-pxt-extension#v0.0.3\",\n        \"dict_ext\": \"github:The-Code-Zone/Dictionary-pxt-extension#v1.0.5\",\n        \"arcade-tile-util\": \"github:microsoft/arcade-tile-util#v1.2.0\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\",\n        \"main.py\",\n        \"images.g.jres\",\n        \"images.g.ts\",\n        \"tilemap.g.jres\",\n        \"tilemap.g.ts\"\n    ],\n    \"targetVersions\": {\n        \"target\": \"2.0.3\",\n        \"pxt\": \"10.0.23\"\n    },\n    \"preferredEditor\": \"pyprj\",\n    \"palette\": [\n        \"#000000\",\n        \"#FFFFFF\",\n        \"#B22A2A\",\n        \"#FF93C4\",\n        \"#FF8135\",\n        \"#FFF609\",\n        \"#249CA3\",\n        \"#509933\",\n        \"#003FAD\",\n        \"#BADCFD\",\n        \"#8E2EC4\",\n        \"#A4839F\",\n        \"#5C406c\",\n        \"#E5CDC4\",\n        \"#91463d\",\n        \"#000000\"\n    ]\n}\n"}},{"timestamp":1737294498474,"editorVersion":"2.0.3","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block></xml>","main.ts":"","README.md":" ","assets.json":"","main.py":"# testing things for helping shylah with the idea\n\n# setup\nCard = SpriteKind.create()\nbot = sprites.create(assets.image(\"bot\"), SpriteKind.enemy)\nbot.scale = 2\nbot.y -= 20\np_stood = False\nb_stood = False\np_tot = 0\nb_tot = 0\nscene.set_tile_map_level(assets.tilemap(\"level\"))\ndeck_list = [1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6,7,7,7,7,8,8,8,8,9,9,9,9,10,10,10,10]\n# in theory deck is doable with only 1-10 once but this way feels nicer to the real game and technically includes card counting as a mechanic lol\np_hand: List[number] = []\nb_hand: List[number] = []\nshuffled_deck: List[number] = []\nshuffle() # makecode not having pythons random.shuffle is so bad\n\ndef shuffle(): # what if we just make it work like an actual deck of cards, lets shuffle!\n    deck_list = [1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6,7,7,7,7,8,8,8,8,9,9,9,9,10,10,10,10]\n    while len(shuffled_deck) <= 40:\n        blorb = deck_list[randint(0, len(deck_list)-1)]\n        shuffled_deck.append(blorb)\n        deck_list.remove_element(blorb)\n        if len(deck_list) == 0:\n            console.log(len(shuffled_deck))\n            game_loop()\n            break\n\n\n\ncards = Dictionary.create([1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n    [assets.image(\"\"\"\n            1\n            \"\"\"),\n        assets.image(\"\"\"\n            2\n            \"\"\"),\n        assets.image(\"\"\"\n            3\n            \"\"\"),\n        assets.image(\"\"\"\n            4\n            \"\"\"),\n        assets.image(\"\"\"\n            5\n            \"\"\"),\n        assets.image(\"\"\"\n            6\n            \"\"\"),\n        assets.image(\"\"\"\n            7\n            \"\"\"),\n        assets.image(\"\"\"\n            8\n            \"\"\"),\n        assets.image(\"\"\"\n            9\n            \"\"\"),\n        assets.image(\"\"\"\n            10\n            \"\"\")])\n\n\n\ndef p_draw():\n    global deck_list, p_hand\n    # player drawing isn't different from bot drawing really, just fits nicer in two funcs\n    #drawn_card = deck_list[randint(0, len(deck_list))] #  YOU! WHY? THAT'S SO RUDE\n    #console.log(\"drawn card is \" + drawn_card)\n    drawn_card = shuffled_deck.pop()\n    p_hand.append(drawn_card)\n    console.log(\"cards remaining in deck: \" + len(shuffled_deck))\n    #deck_list.remove_element(drawn_card)\n    update_p_hand()\ncontroller.A.on_event(ControllerButtonEvent.PRESSED, p_draw)\n\ndef b_draw():\n    drawn_card = shuffled_deck.pop()\n    b_hand.append(drawn_card)\n    update_b_hand()\n\ndef update_b_hand():\n    card = sprites.create(assets.image(\"deck\"), Card)\n    card.scale = 1.5\n\ndef b_behaviour():\n    global b_stood, b_tot\n    b_tot = 0\n    for i in b_hand:\n        b_tot += b_hand[i]\n    if b_tot >= 17:\n        b_stood = True\n    else:\n        b_draw()\n\n# now for the screwy bit\n\ndef update_p_hand():\n    card_to_add = p_hand.pop() # turns pop works on the main list even if it's not global what the hell\n    p_hand.append(card_to_add) # figure out why this comes up undefined sometimes... it breaks the dict\n    card = sprites.create(assets.image(\"deck\"), Card)\n    card.set_image(Dictionary.get_value(cards, card_to_add)) # thanks Lew!\n    #card.set_flag(SpriteFlag.RELATIVE_TO_CAMERA, True) # relative to camera means no overlap\n    card.set_position(80, 90) #just makes the cards centred a little bit\n    card.scale = 2 # too small at the start\n\ndef hand_disp(card1, card2): # such a shoddy way of doing it but hey, if it works it works\n    card1.x -= 1\n    card2.x +=1\nsprites.on_overlap(Card, Card, hand_disp)\n\ndef p_total():\n    global p_tot\n    p_tot = 0\n    for i in p_hand:\n        p_tot += p_hand[i]\n\n# right, now to make the actual game lmaoo\n\n# start the game by giving the player and bot 1 card each!\np_draw()\nb_draw()\n\n# and now we begin proper!\n\ndef game_loop():\n    global p_stood, b_stood\n    if p_stood == False:\n        choice = game.ask(\"hit or stand?\")\n        if choice == True:\n            p_draw()\n\n        else:\n            stood = True \n    if not b_stood:\n        b_behaviour()\n    p_total()\n    if p_tot and b_tot == 20:\n        game.splash(\"It's a draw!\")\n        shuffle() \n    elif p_tot == 20:\n        game.game_over(True)\n    elif b_tot == 20:\n        game.game_over(False)","images.g.jres":"{\n    \"image2\": {\n        \"data\": \"hwQUABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////AAAA8P///wDw////AAAA/////w/w////AADw///////w////AAD/////////////AAD/////////////AAD/////////////AAD/////////////AAD/////////////AAD/////////////AAD/////////////AADw///////w////AAAA/////w/w////AAAA8P///wAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"bot\"\n    },\n    \"image3\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8O6e6e4PAADg8f///w4AAOAfHxEfDgAAkP8RH/EJAACQHx8RHwkAAODx////DgAA4P////8OAADw7p7p7g8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"deck\"\n    },\n    \"image1\": {\n        \"data\": \"hwQQABAAAAAAAADgd+fu7gAAAOB35+4AAAAA4Hd3DgAAAADgd3cOAAAAAOB3dw4AAAAA4Hd3DgAAAADgd3cOAAAAAOB3dw4AAAAA4Hd3DgAAAADgd3cOAAAAAOB3dw4AAAAA4Hd3DgAAAADgd3cOAAAA8O93dw4AAADw73fn7gAAAPDvd+fu7g==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"Table\"\n    },\n    \"image14\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAAAAADwAA8AAADw////DwAAAPD/////DwAAAADw//8PAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"gun\"\n    },\n    \"image4\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQHxEREZ8AAJAREf8RkQAAkBHx/xGRAACQEf//H5EAAJAR8f8RkQAAkBER/xGRAACQHxEREZ8AAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"1\"\n    },\n    \"image5\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQEhEREZIAAJARIRERkQAAkBESESKRAACQERIhIZEAAJARIRIhkQAAkBERERGRAACQEhEREZIAAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"2\"\n    },\n    \"image7\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQHxEREZ8AAJARERERkQAAkBEfER+RAACQ8RER8ZEAAJDxER/xkQAAkBH/8R+RAACQHxEREZ8AAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"3\"\n    },\n    \"image6\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQEhEREZIAAJARERIRkQAAkBEhIRGRAACQERIhEZEAAJARIiIikQAAkBERERGRAACQEhEREZIAAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"4\"\n    },\n    \"image8\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQHxEREZ8AAJAR/x8fkQAAkBEfHx+RAACQER8fH5EAAJARH/EfkQAAkBERERGRAACQHxEREZ8AAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"5\"\n    },\n    \"image9\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQEhEREZIAAJARIiISkQAAkBESEhKRAACQERISEpEAAJAREiISkQAAkBERERGRAACQEhEREZIAAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"6\"\n    },\n    \"image11\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQHxEREZ8AAJARER8RkQAAkBH//x+RAACQER8fEZEAAJARHxERkQAAkBERERGRAACQHxEREZ8AAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"7\"\n    },\n    \"image10\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQEhEREZIAAJARIiISkQAAkBESEhKRAACQERISEpEAAJAREhISkQAAkBEiIhKRAACQEhEREZIAAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"8\"\n    },\n    \"image13\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQEhEREZIAAJARIiIRkQAAkBERERGRAACQESIiEZEAAJAREiERkQAAkBEiIhGRAACQEhEREZIAAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"10\"\n    },\n    \"image12\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQHxEREZ8AAJAR/x8RkQAAkBEfHxGRAACQER8fEZEAAJAR//8fkQAAkBERERGRAACQHxEREZ8AAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"9\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myImages\"\n    }\n}","images.g.ts":"","tilemap.g.jres":"{\n    \"transparency16\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"tilemapTile\": true\n    },\n    \"tile3\": {\n        \"data\": \"hwQQABAAAAAiIiIiIiIiIv//////////IiIiIiIiIiL//////////yIiIiIiIiIi//////////8iIiIiIiIiIv//////////IiIiIiIiIiL//////////yIiIiIiIiIi//////////8iIiIiIiIiIv//////////IiIiIiIiIiL//////////w==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"tilemapTile\": true,\n        \"displayName\": \"myTile1\"\n    },\n    \"level1\": {\n        \"id\": \"level1\",\n        \"mimeType\": \"application/mkcd-tilemap\",\n        \"data\": \"MTAxMDAwMTAwMDAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMA==\",\n        \"tileset\": [\n            \"myTiles.transparency16\",\n            \"myTiles.tile3\"\n        ],\n        \"displayName\": \"level\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myTiles\"\n    }\n}","tilemap.g.ts":"","pxt.json":"{\n    \"name\": \"Untitled\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\",\n        \"arcade-text\": \"github:microsoft/arcade-text#v1.3.0\",\n        \"Database\": \"github:The-Code-Zone/DB-Storage-pxt-extension#v0.0.3\",\n        \"dict_ext\": \"github:The-Code-Zone/Dictionary-pxt-extension#v1.0.5\",\n        \"arcade-tile-util\": \"github:microsoft/arcade-tile-util#v1.2.0\",\n        \"Timers\": \"github:microsoft/arcade-timers#v1.1.0\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\",\n        \"main.py\",\n        \"images.g.jres\",\n        \"images.g.ts\",\n        \"tilemap.g.jres\",\n        \"tilemap.g.ts\"\n    ],\n    \"targetVersions\": {\n        \"target\": \"2.0.3\",\n        \"pxt\": \"10.0.23\"\n    },\n    \"preferredEditor\": \"pyprj\",\n    \"palette\": [\n        \"#000000\",\n        \"#FFFFFF\",\n        \"#B22A2A\",\n        \"#FF93C4\",\n        \"#FF8135\",\n        \"#FFF609\",\n        \"#249CA3\",\n        \"#509933\",\n        \"#003FAD\",\n        \"#BADCFD\",\n        \"#8E2EC4\",\n        \"#A4839F\",\n        \"#5C406c\",\n        \"#E5CDC4\",\n        \"#91463d\",\n        \"#000000\"\n    ]\n}\n"}},{"timestamp":1737407911455,"editorVersion":"2.0.3","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block></xml>","main.ts":"","README.md":" ","assets.json":"","main.py":"# testing things for helping shylah with the idea\n\n# setup\nCard = SpriteKind.create()\nbot = sprites.create(assets.image(\"bot\"), SpriteKind.enemy)\nbot.scale = 2\nbot.y -= 20\np_stood = False\nb_stood = False\np_tot = 0\nb_tot = 0\nscene.set_tile_map_level(assets.tilemap(\"level\"))\ndeck_list = [1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6,7,7,7,7,8,8,8,8,9,9,9,9,10,10,10,10]\n# in theory deck is doable with only 1-10 once but this way feels nicer to the real game and technically includes card counting as a mechanic lol\np_hand: List[number] = []\nb_hand: List[number] = []\nshuffled_deck: List[number] = []\nshuffle() # makecode not having pythons random.shuffle is so bad\n\ndef shuffle(): # what if we just make it work like an actual deck of cards, lets shuffle!\n    p_hand: List[number] = []\n    b_hand: List[number] = []\n    deck_list = [1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6,7,7,7,7,8,8,8,8,9,9,9,9,10,10,10,10]\n    while len(shuffled_deck) <= 40:\n        blorb = deck_list[randint(0, len(deck_list)-1)]\n        shuffled_deck.append(blorb)\n        deck_list.remove_element(blorb)\n        if len(deck_list) == 0:\n            console.log(len(shuffled_deck))\n            break\n\n\n\ncards = Dictionary.create([1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n    [assets.image(\"\"\"\n            1\n            \"\"\"),\n        assets.image(\"\"\"\n            2\n            \"\"\"),\n        assets.image(\"\"\"\n            3\n            \"\"\"),\n        assets.image(\"\"\"\n            4\n            \"\"\"),\n        assets.image(\"\"\"\n            5\n            \"\"\"),\n        assets.image(\"\"\"\n            6\n            \"\"\"),\n        assets.image(\"\"\"\n            7\n            \"\"\"),\n        assets.image(\"\"\"\n            8\n            \"\"\"),\n        assets.image(\"\"\"\n            9\n            \"\"\"),\n        assets.image(\"\"\"\n            10\n            \"\"\")])\n\n\n\ndef p_draw():\n    global deck_list, p_hand\n    # player drawing isn't different from bot drawing really, just fits nicer in two funcs\n    #drawn_card = deck_list[randint(0, len(deck_list))] #  YOU! WHY? THAT'S SO RUDE\n    #console.log(\"drawn card is \" + drawn_card)\n    drawn_card = shuffled_deck.pop()\n    p_hand.append(drawn_card)\n    console.log(\"cards remaining in deck: \" + len(shuffled_deck))\n    #deck_list.remove_element(drawn_card)\n    update_p_hand()\ncontroller.A.on_event(ControllerButtonEvent.PRESSED, p_draw)\n\ndef b_draw():\n    drawn_card = shuffled_deck.pop()\n    b_hand.append(drawn_card)\n    update_b_hand()\n\ndef update_b_hand():\n    card = sprites.create(assets.image(\"deck\"), Card)\n    card.scale = 1.5\n\ndef b_behaviour():\n    global b_stood, b_tot\n    b_tot = 0\n    for i in b_hand:\n        b_tot += b_hand[i]\n    if b_tot >= 17:\n        b_stood = True\n    else:\n        b_draw()\n\n# now for the screwy bit\n\ndef update_p_hand():\n    card_to_add = p_hand.pop() # turns pop works on the main list even if it's not global what the hell\n    p_hand.append(card_to_add) # figure out why this comes up undefined sometimes... it breaks the dict\n    card = sprites.create(assets.image(\"deck\"), Card)\n    card.set_image(Dictionary.get_value(cards, card_to_add)) # thanks Lew!\n    #card.set_flag(SpriteFlag.RELATIVE_TO_CAMERA, True) # relative to camera means no overlap\n    card.set_position(80, 90) #just makes the cards centred a little bit\n    card.scale = 2 # too small at the start\n\ndef hand_disp(card1, card2): # such a shoddy way of doing it but hey, if it works it works\n    card1.x -= 1\n    card2.x +=1\nsprites.on_overlap(Card, Card, hand_disp)\n\ndef p_total():\n    global p_tot\n    p_tot = 0\n    for i in p_hand:\n        p_tot += p_hand[i]\n\n# right, now to make the actual game lmaoo\n\n# start the game by giving the player and bot 1 card each!\np_draw()\nb_draw()\n\n# and now we begin proper!\ndef game_loop():\n    global p_stood, b_stood, b_tot, p_tot\n    pause(1000)\n    if p_stood == False:\n        choice = game.ask(\"hit or stand?\")\n        if choice == True:\n            p_draw()\n\n        else:\n            p_stood = True \n    if not b_stood:\n        b_behaviour()\n    p_total()\n    if p_tot and b_tot == 20:\n        game.splash(\"It's a draw!\")\n        shuffle()\n        b_stood = False\n        p_stood = False \n    elif p_tot == 20:\n        game.game_over(True)\n    elif b_tot == 20:\n        game.game_over(False)\n    elif p_tot > 20:\n        p_stood = True\n    elif b_tot > 20:\n        b_stood = True\n    game_loop()\n\ngame_loop()","images.g.jres":"{\n    \"image2\": {\n        \"data\": \"hwQUABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////AAAA8P///wDw////AAAA/////w/w////AADw///////w////AAD/////////////AAD/////////////AAD/////////////AAD/////////////AAD/////////////AAD/////////////AAD/////////////AADw///////w////AAAA/////w/w////AAAA8P///wAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"bot\"\n    },\n    \"image3\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8O6e6e4PAADg8f///w4AAOAfHxEfDgAAkP8RH/EJAACQHx8RHwkAAODx////DgAA4P////8OAADw7p7p7g8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"deck\"\n    },\n    \"image1\": {\n        \"data\": \"hwQQABAAAAAAAADgd+fu7gAAAOB35+4AAAAA4Hd3DgAAAADgd3cOAAAAAOB3dw4AAAAA4Hd3DgAAAADgd3cOAAAAAOB3dw4AAAAA4Hd3DgAAAADgd3cOAAAAAOB3dw4AAAAA4Hd3DgAAAADgd3cOAAAA8O93dw4AAADw73fn7gAAAPDvd+fu7g==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"Table\"\n    },\n    \"image14\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAAAAADwAA8AAADw////DwAAAPD/////DwAAAADw//8PAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"gun\"\n    },\n    \"image4\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQHxEREZ8AAJAREf8RkQAAkBHx/xGRAACQEf//H5EAAJAR8f8RkQAAkBER/xGRAACQHxEREZ8AAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"1\"\n    },\n    \"image5\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQEhEREZIAAJARIRERkQAAkBESESKRAACQERIhIZEAAJARIRIhkQAAkBERERGRAACQEhEREZIAAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"2\"\n    },\n    \"image7\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQHxEREZ8AAJARERERkQAAkBEfER+RAACQ8RER8ZEAAJDxER/xkQAAkBH/8R+RAACQHxEREZ8AAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"3\"\n    },\n    \"image6\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQEhEREZIAAJARERIRkQAAkBEhIRGRAACQERIhEZEAAJARIiIikQAAkBERERGRAACQEhEREZIAAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"4\"\n    },\n    \"image8\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQHxEREZ8AAJAR/x8fkQAAkBEfHx+RAACQER8fH5EAAJARH/EfkQAAkBERERGRAACQHxEREZ8AAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"5\"\n    },\n    \"image9\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQEhEREZIAAJARIiISkQAAkBESEhKRAACQERISEpEAAJAREiISkQAAkBERERGRAACQEhEREZIAAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"6\"\n    },\n    \"image11\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQHxEREZ8AAJARER8RkQAAkBH//x+RAACQER8fEZEAAJARHxERkQAAkBERERGRAACQHxEREZ8AAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"7\"\n    },\n    \"image10\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQEhEREZIAAJARIiISkQAAkBESEhKRAACQERISEpEAAJAREhISkQAAkBEiIhKRAACQEhEREZIAAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"8\"\n    },\n    \"image13\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQEhEREZIAAJARIiIRkQAAkBERERGRAACQESIiEZEAAJAREiERkQAAkBEiIhGRAACQEhEREZIAAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"10\"\n    },\n    \"image12\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQHxEREZ8AAJAR/x8RkQAAkBEfHxGRAACQER8fEZEAAJAR//8fkQAAkBERERGRAACQHxEREZ8AAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"9\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myImages\"\n    }\n}","images.g.ts":"","tilemap.g.jres":"{\n    \"transparency16\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"tilemapTile\": true\n    },\n    \"tile3\": {\n        \"data\": \"hwQQABAAAAAiIiIiIiIiIv//////////IiIiIiIiIiL//////////yIiIiIiIiIi//////////8iIiIiIiIiIv//////////IiIiIiIiIiL//////////yIiIiIiIiIi//////////8iIiIiIiIiIv//////////IiIiIiIiIiL//////////w==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"tilemapTile\": true,\n        \"displayName\": \"myTile1\"\n    },\n    \"level1\": {\n        \"id\": \"level1\",\n        \"mimeType\": \"application/mkcd-tilemap\",\n        \"data\": \"MTAxMDAwMTAwMDAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMA==\",\n        \"tileset\": [\n            \"myTiles.transparency16\",\n            \"myTiles.tile3\"\n        ],\n        \"displayName\": \"level\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myTiles\"\n    }\n}","tilemap.g.ts":"","pxt.json":"{\n    \"name\": \"Untitled\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\",\n        \"arcade-text\": \"github:microsoft/arcade-text#v1.3.0\",\n        \"Database\": \"github:The-Code-Zone/DB-Storage-pxt-extension#v0.0.3\",\n        \"dict_ext\": \"github:The-Code-Zone/Dictionary-pxt-extension#v1.0.5\",\n        \"arcade-tile-util\": \"github:microsoft/arcade-tile-util#v1.2.0\",\n        \"Timers\": \"github:microsoft/arcade-timers#v1.1.0\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\",\n        \"main.py\",\n        \"images.g.jres\",\n        \"images.g.ts\",\n        \"tilemap.g.jres\",\n        \"tilemap.g.ts\"\n    ],\n    \"targetVersions\": {\n        \"target\": \"2.0.3\",\n        \"pxt\": \"10.0.23\"\n    },\n    \"preferredEditor\": \"pyprj\",\n    \"palette\": [\n        \"#000000\",\n        \"#FFFFFF\",\n        \"#B22A2A\",\n        \"#FF93C4\",\n        \"#FF8135\",\n        \"#FFF609\",\n        \"#249CA3\",\n        \"#509933\",\n        \"#003FAD\",\n        \"#BADCFD\",\n        \"#8E2EC4\",\n        \"#A4839F\",\n        \"#5C406c\",\n        \"#E5CDC4\",\n        \"#91463d\",\n        \"#000000\"\n    ]\n}\n"}},{"timestamp":1737409717861,"editorVersion":"2.0.3","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block></xml>","main.ts":"","README.md":" ","assets.json":"","main.py":"# testing things for helping shylah with the idea\n\n# setup\nCard = SpriteKind.create()\nbot = sprites.create(assets.image(\"bot\"), SpriteKind.enemy)\nbot.scale = 2\nbot.y -= 20\np_stood = False\nb_stood = False\np_tot = 0\nb_tot = 0\nscene.set_tile_map_level(assets.tilemap(\"level\"))\ndeck_list = [1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6,7,7,7,7,8,8,8,8,9,9,9,9,10,10,10,10]\n# in theory deck is doable with only 1-10 once but this way feels nicer to the real game and technically includes card counting as a mechanic lol\np_hand: List[number] = []\nb_hand: List[number] = []\nshuffled_deck: List[number] = []\nshuffle() # makecode not having pythons random.shuffle is so bad\n\ndef shuffle(): # what if we just make it work like an actual deck of cards, lets shuffle!\n    p_hand: List[number] = []\n    b_hand: List[number] = []\n    deck_list = [1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6,7,7,7,7,8,8,8,8,9,9,9,9,10,10,10,10]\n    while len(shuffled_deck) <= 40:\n        blorb = deck_list[randint(0, len(deck_list)-1)]\n        shuffled_deck.append(blorb)\n        deck_list.remove_element(blorb)\n        if len(deck_list) == 0:\n            console.log(len(shuffled_deck))\n            break\n\n\n\ncards = Dictionary.create([1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n    [assets.image(\"\"\"\n            1\n            \"\"\"),\n        assets.image(\"\"\"\n            2\n            \"\"\"),\n        assets.image(\"\"\"\n            3\n            \"\"\"),\n        assets.image(\"\"\"\n            4\n            \"\"\"),\n        assets.image(\"\"\"\n            5\n            \"\"\"),\n        assets.image(\"\"\"\n            6\n            \"\"\"),\n        assets.image(\"\"\"\n            7\n            \"\"\"),\n        assets.image(\"\"\"\n            8\n            \"\"\"),\n        assets.image(\"\"\"\n            9\n            \"\"\"),\n        assets.image(\"\"\"\n            10\n            \"\"\")])\n\n\n\ndef p_draw():\n    global deck_list, p_hand\n    # player drawing isn't different from bot drawing really, just fits nicer in two funcs\n    #drawn_card = deck_list[randint(0, len(deck_list))] #  YOU! WHY? THAT'S SO RUDE\n    #console.log(\"drawn card is \" + drawn_card)\n    drawn_card = shuffled_deck.pop()\n    p_hand.append(drawn_card)\n    console.log(\"cards remaining in deck: \" + len(shuffled_deck))\n    #deck_list.remove_element(drawn_card)\n    update_p_hand()\ncontroller.A.on_event(ControllerButtonEvent.PRESSED, p_draw)\n\ndef b_draw():\n    drawn_card = shuffled_deck.pop()\n    b_hand.append(drawn_card)\n    update_b_hand()\n\ndef update_b_hand():\n    card = sprites.create(assets.image(\"deck\"), Card)\n    card.scale = 1.5\n\ndef b_behaviour():\n    global b_stood, b_tot\n    if len(b_hand) == 1:\n        b_tot = b_hand.pop()\n        b_hand.append(b_tot)\n        b_hand.append(0)\n    else:\n        to_add = b_hand.pop()\n        b_tot += to_add\n        b_hand.append(to_add)\n    if b_tot >= 17:\n        b_stood = True\n    else:\n        b_draw()\n    console.log(\"bots total is: \" + b_tot)\n    console.log(b_hand)\n    \n\n# now for the screwy bit\n\ndef update_p_hand():\n    card_to_add = p_hand.pop() # turns pop works on the main list even if it's not global what the hell\n    p_hand.append(card_to_add) # figure out why this comes up undefined sometimes... it breaks the dict\n    card = sprites.create(assets.image(\"deck\"), Card)\n    card.set_image(Dictionary.get_value(cards, card_to_add)) # thanks Lew!\n    #card.set_flag(SpriteFlag.RELATIVE_TO_CAMERA, True) # relative to camera means no overlap\n    card.set_position(80, 90) #just makes the cards centred a little bit\n    card.scale = 2 # too small at the start\n\ndef hand_disp(card1, card2): # such a shoddy way of doing it but hey, if it works it works\n    card1.x -= 1\n    card2.x +=1\nsprites.on_overlap(Card, Card, hand_disp)\n\ndef p_total():\n    global p_tot, p_stood\n\n    if len(p_hand) == 1:\n            p_tot = p_hand.pop()\n            p_hand.append(p_tot)\n    else:\n        if not p_stood:\n            to_add = p_hand.pop()\n            p_tot += to_add\n            p_hand.append(to_add)\n    if p_tot > 20:\n        game.splash(\"You're bust!!!\")\n        p_stood = True\n\n\n# right, now to make the actual game lmaoo\n\n# start the game by giving the player and bot 1 card each!\np_draw()\np_total()\nconsole.log(\"player total is: \" + p_tot)\nb_draw()\n\n# and now we begin proper!\ndef game_loop():\n    global p_stood, b_stood, b_tot, p_tot\n    pause(1000)\n    if p_stood == False:\n        choice = game.ask(\"hit or stand?\")\n        if choice == True:\n            p_draw()\n            p_total()\n\n        else:\n            p_stood = True \n            p_total()\n    if b_stood == False:\n        b_behaviour()\n    console.log(\"player total is: \" + p_tot)\n    console.log(b_stood)\n    if b_stood and p_stood:\n        checkwin() \n    game_loop()\n\ndef checkwin():\n    p_bust = False\n    b_bust = False\n    if p_tot > 20:\n        p_bust = True\n    if b_tot > 20:\n        b_bust = True\n    if p_bust and b_bust or p_tot == b_tot:\n        game.splash(\"it's a draw! Resetting...\")\n    npt = 20 - p_tot\n    bpt = 20 - b_tot\n    console.log(\"player npt: \" + npt)\n    console.log(\"bot bpt: \" + bpt)\n    if p_tot < b_tot:\n        game.set_game_over_message(True, \"You're closer to 20! You Win!\")\n        game.game_over(True)\n    else:\n        game.set_game_over_message(True, \"The Bot is closer to 20! You Lose...\")\n        game.game_over(False)\ngame_loop()","images.g.jres":"{\n    \"image2\": {\n        \"data\": \"hwQUABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////AAAA8P///wDw////AAAA/////w/w////AADw///////w////AAD/////////////AAD/////////////AAD/////////////AAD/////////////AAD/////////////AAD/////////////AAD/////////////AADw///////w////AAAA/////w/w////AAAA8P///wAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"bot\"\n    },\n    \"image3\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8O6e6e4PAADg8f///w4AAOAfHxEfDgAAkP8RH/EJAACQHx8RHwkAAODx////DgAA4P////8OAADw7p7p7g8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"deck\"\n    },\n    \"image1\": {\n        \"data\": \"hwQQABAAAAAAAADgd+fu7gAAAOB35+4AAAAA4Hd3DgAAAADgd3cOAAAAAOB3dw4AAAAA4Hd3DgAAAADgd3cOAAAAAOB3dw4AAAAA4Hd3DgAAAADgd3cOAAAAAOB3dw4AAAAA4Hd3DgAAAADgd3cOAAAA8O93dw4AAADw73fn7gAAAPDvd+fu7g==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"Table\"\n    },\n    \"image14\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAAAAADwAA8AAADw////DwAAAPD/////DwAAAADw//8PAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"gun\"\n    },\n    \"image4\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQHxEREZ8AAJAREf8RkQAAkBHx/xGRAACQEf//H5EAAJAR8f8RkQAAkBER/xGRAACQHxEREZ8AAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"1\"\n    },\n    \"image5\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQEhEREZIAAJARIRERkQAAkBESESKRAACQERIhIZEAAJARIRIhkQAAkBERERGRAACQEhEREZIAAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"2\"\n    },\n    \"image7\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQHxEREZ8AAJARERERkQAAkBEfER+RAACQ8RER8ZEAAJDxER/xkQAAkBH/8R+RAACQHxEREZ8AAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"3\"\n    },\n    \"image6\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQEhEREZIAAJARERIRkQAAkBEhIRGRAACQERIhEZEAAJARIiIikQAAkBERERGRAACQEhEREZIAAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"4\"\n    },\n    \"image8\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQHxEREZ8AAJAR/x8fkQAAkBEfHx+RAACQER8fH5EAAJARH/EfkQAAkBERERGRAACQHxEREZ8AAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"5\"\n    },\n    \"image9\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQEhEREZIAAJARIiISkQAAkBESEhKRAACQERISEpEAAJAREiISkQAAkBERERGRAACQEhEREZIAAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"6\"\n    },\n    \"image11\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQHxEREZ8AAJARER8RkQAAkBH//x+RAACQER8fEZEAAJARHxERkQAAkBERERGRAACQHxEREZ8AAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"7\"\n    },\n    \"image10\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQEhEREZIAAJARIiISkQAAkBESEhKRAACQERISEpEAAJAREhISkQAAkBEiIhKRAACQEhEREZIAAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"8\"\n    },\n    \"image13\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQEhEREZIAAJARIiIRkQAAkBERERGRAACQESIiEZEAAJAREiERkQAAkBEiIhGRAACQEhEREZIAAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"10\"\n    },\n    \"image12\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmZmZkJAACQHxEREZ8AAJAR/x8RkQAAkBEfHxGRAACQER8fEZEAAJAR//8fkQAAkBERERGRAACQHxEREZ8AAACZmZmZCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"9\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myImages\"\n    }\n}","images.g.ts":"","tilemap.g.jres":"{\n    \"transparency16\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"tilemapTile\": true\n    },\n    \"tile3\": {\n        \"data\": \"hwQQABAAAAAiIiIiIiIiIv//////////IiIiIiIiIiL//////////yIiIiIiIiIi//////////8iIiIiIiIiIv//////////IiIiIiIiIiL//////////yIiIiIiIiIi//////////8iIiIiIiIiIv//////////IiIiIiIiIiL//////////w==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"tilemapTile\": true,\n        \"displayName\": \"myTile1\"\n    },\n    \"level1\": {\n        \"id\": \"level1\",\n        \"mimeType\": \"application/mkcd-tilemap\",\n        \"data\": \"MTAxMDAwMTAwMDAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMA==\",\n        \"tileset\": [\n            \"myTiles.transparency16\",\n            \"myTiles.tile3\"\n        ],\n        \"displayName\": \"level\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myTiles\"\n    }\n}","tilemap.g.ts":"","pxt.json":"{\n    \"name\": \"Untitled\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\",\n        \"arcade-text\": \"github:microsoft/arcade-text#v1.3.0\",\n        \"Database\": \"github:The-Code-Zone/DB-Storage-pxt-extension#v0.0.3\",\n        \"dict_ext\": \"github:The-Code-Zone/Dictionary-pxt-extension#v1.0.5\",\n        \"arcade-tile-util\": \"github:microsoft/arcade-tile-util#v1.2.0\",\n        \"Timers\": \"github:microsoft/arcade-timers#v1.1.0\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\",\n        \"main.py\",\n        \"images.g.jres\",\n        \"images.g.ts\",\n        \"tilemap.g.jres\",\n        \"tilemap.g.ts\"\n    ],\n    \"targetVersions\": {\n        \"target\": \"2.0.3\",\n        \"pxt\": \"10.0.23\"\n    },\n    \"preferredEditor\": \"pyprj\",\n    \"palette\": [\n        \"#000000\",\n        \"#FFFFFF\",\n        \"#B22A2A\",\n        \"#FF93C4\",\n        \"#FF8135\",\n        \"#FFF609\",\n        \"#249CA3\",\n        \"#509933\",\n        \"#003FAD\",\n        \"#BADCFD\",\n        \"#8E2EC4\",\n        \"#A4839F\",\n        \"#5C406c\",\n        \"#E5CDC4\",\n        \"#91463d\",\n        \"#000000\"\n    ]\n}\n"}}],"shares":[]}